<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>呆蜗牛 - Blog</title>
  <icon>https://www.gravatar.com/avatar/8e747b857d69a7aef9b5e30b01537cc2</icon>
  <subtitle>呆蜗牛个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.daiwoniu.com/"/>
  <updated>2018-12-14T07:29:10.000Z</updated>
  <id>http://blog.daiwoniu.com/</id>
  
  <author>
    <name>呆蜗牛</name>
    <email>daiwoniu@aliyun.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux下安装zookeeper</title>
    <link href="http://blog.daiwoniu.com/posts/develop-tool/2018-12-14-linux-zookeeper.html"/>
    <id>http://blog.daiwoniu.com/posts/develop-tool/2018-12-14-linux-zookeeper.html</id>
    <published>2018-12-14T07:05:10.000Z</published>
    <updated>2018-12-14T07:29:10.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="zookeeper是什么？"><a href="#zookeeper是什么？" class="headerlink" title="zookeeper是什么？"></a>zookeeper是什么？</h4><blockquote><p>这里简单说一下<br>ZooKeeper是一个分布式的，开放源码的分布式应用程序协调服务，它是集群的管理者，监视着集群中各个节点的状态根据节点提交的反馈进行下一步合理操作。<br>Zookeeper集群的工作是超过半数才能对外提供服务，3台中超过两台超过半数，允许1台挂掉 ，是否可以用偶数，其实没必要。 如果有四台那么挂掉一台还剩下三台服务器，如果在挂掉一个就不行了，这里记住是超过半数。<br>ZooKeeper详细的介绍请参考：<a href="https://blog.csdn.net/xqb_756148978/article/details/52259381" target="_blank" rel="noopener">https://blog.csdn.net/xqb_756148978/article/details/52259381</a></p></blockquote><h4 id="zookeeper安装"><a href="#zookeeper安装" class="headerlink" title="zookeeper安装"></a>zookeeper安装</h4><blockquote><ol><li>下载<br> <code>$wget https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.4.12/zookeeper-3.4.12.tar.gz</code><a id="more"></a></li></ol></blockquote><blockquote><ol start="2"><li>安装 <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line"><span class="regexp">//</span> 解压</span><br><span class="line"><span class="variable">$tar</span> -zxvf zookeeper-<span class="number">3.4</span>.<span class="number">12</span>.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 创建安装目录</span><br><span class="line"><span class="variable">$mkdir</span> <span class="regexp">/opt/</span>zookeeper <span class="comment">#项目目录</span></span><br><span class="line"> <span class="variable">$mkdir</span> <span class="regexp">/opt/</span>zkdata <span class="comment">#存放快照日志</span></span><br><span class="line"> <span class="variable">$mkdir</span> <span class="regexp">/opt/</span>zkdatalog <span class="comment">#存放事物日志</span></span><br><span class="line">$</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="3"><li>配置<br>/opt/zookeeper的conf目录下,有三个配置文件，configuration.xsl,log4j.properties,zoo_sample.cfg，zoo_sample.cfg 这个文件是官方给我们的zookeeper的样板文件，用它复制一份命名为zoo.cfg，zoo.cfg是官方指定的文件命名规则，做如下配置   <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这个时间是作为 Zookeeper 服务器之间或客户端与服务器之间维持心跳的时间间隔，也就是每个 tickTime 时间就会发送一个心跳。</span></span><br><span class="line"><span class="attribute">tickTime</span>=2000</span><br><span class="line"><span class="comment">#这个配置项是用来配置 Zookeeper 接受客户端（这里所说的客户端不是用户连接 Zookeeper 服务器的客户端，而是 Zookeeper 服务器集群中连接到 Leader 的 Follower 服务器）初始化连接时最长能忍受多少个心跳时间间隔数。当已经超过 5个心跳的时间（也就是 tickTime）长度后 Zookeeper 服务器还没有收到客户端的返回信息，那么表明这个客户端连接失败。总的时间长度就是 5*2000=10 秒</span></span><br><span class="line"><span class="attribute">initLimit</span>=10</span><br><span class="line"><span class="comment">#这个配置项标识 Leader 与Follower 之间发送消息，请求和应答时间长度，最长不能超过多少个 tickTime 的时间长度，总的时间长度就是5*2000=10秒</span></span><br><span class="line"><span class="attribute">syncLimit</span>=5</span><br><span class="line"><span class="comment">#快照日志的存储路径</span></span><br><span class="line"><span class="attribute">dataDir</span>=/opt/zookeeper/zkdata</span><br><span class="line"><span class="comment">#事物日志的存储路径，如果不配置这个那么事物日志会默认存储到dataDir制定的目录，这样会严重影响zk的性能，当zk吞吐量较大的时候，产生的事物日志、快照日志太多</span></span><br><span class="line"><span class="attribute">dataLogDir</span>=/opt/zookeeper/zkdatalog</span><br><span class="line"><span class="comment">#这个端口就是客户端连接 Zookeeper 服务器的端口，Zookeeper 会监听这个端口，接受客户端的访问请求。修改他的端口改大点</span></span><br><span class="line"><span class="attribute">clientPort</span>=12181</span><br><span class="line">server.<span class="attribute">1</span>=192.168.1.60:12888:13888</span><br><span class="line"><span class="comment">#server.1 这个1是服务器的标识也可以是其他的数字， 表示这个是第几号服务器，用来标识服务器，这个标识要写到快照目录下面myid文件里</span></span><br><span class="line"><span class="comment">#192.168.1.60为集群里的IP地址，第一个端口是master和slave之间的通信端口，默认是2888，第二个端口是leader选举的端口，集群刚启动的时候选举或者leader挂掉之后进行新的选举的端口默认是3888</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="4"><li>创建myid文件<br>在zkdata目录创建myid文件，myid文件在快照目录下存放的标识本台服务器的文件，他是整个zk集群用来发现彼此的一个重要标识<br>内容为： <figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="5"><li>启动 <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line"><span class="variable">$cd</span> /opt/zookeeper/bin</span><br><span class="line">$./zkServer<span class="selector-class">.sh</span> start</span><br><span class="line"> <span class="comment">// 检查服务状态</span></span><br><span class="line"> $./zkServer<span class="selector-class">.sh</span> status</span><br><span class="line"> <span class="comment">// 停止服务</span></span><br><span class="line"> $./zkServer<span class="selector-class">.sh</span> stop</span><br><span class="line">$</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><p>6.集群<br>如果是多台集群，重复以上操作<br>注意myid文件他是整个zk集群用来发现彼此的一个重要标识，不同机器的内容分别为1或2或3等<br>每天机器的zoo.cfg 文件都配置三个server<br>    <figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server<span class="meta">.1</span>=<span class="number">192.168</span><span class="meta">.1</span><span class="meta">.60</span>:<span class="number">12888</span>:<span class="number">13888</span></span><br><span class="line">server<span class="meta">.2</span>=<span class="number">192.168</span><span class="meta">.1</span><span class="meta">.61</span>:<span class="number">12888</span>:<span class="number">13888</span></span><br><span class="line">server<span class="meta">.3</span>=<span class="number">192.168</span><span class="meta">.1</span><span class="meta">.62</span>:<span class="number">12888</span>:<span class="number">13888</span></span><br></pre></td></tr></table></figure></p></blockquote><p>然后分别启动即可<br>zookeeper不会主动的清除旧的快照和日志文件，这个是运维维护人员的责任。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;zookeeper是什么？&quot;&gt;&lt;a href=&quot;#zookeeper是什么？&quot; class=&quot;headerlink&quot; title=&quot;zookeeper是什么？&quot;&gt;&lt;/a&gt;zookeeper是什么？&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;这里简单说一下&lt;br&gt;ZooKeeper是一个分布式的，开放源码的分布式应用程序协调服务，它是集群的管理者，监视着集群中各个节点的状态根据节点提交的反馈进行下一步合理操作。&lt;br&gt;Zookeeper集群的工作是超过半数才能对外提供服务，3台中超过两台超过半数，允许1台挂掉 ，是否可以用偶数，其实没必要。 如果有四台那么挂掉一台还剩下三台服务器，如果在挂掉一个就不行了，这里记住是超过半数。&lt;br&gt;ZooKeeper详细的介绍请参考：&lt;a href=&quot;https://blog.csdn.net/xqb_756148978/article/details/52259381&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/xqb_756148978/article/details/52259381&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;zookeeper安装&quot;&gt;&lt;a href=&quot;#zookeeper安装&quot; class=&quot;headerlink&quot; title=&quot;zookeeper安装&quot;&gt;&lt;/a&gt;zookeeper安装&lt;/h4&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;下载&lt;br&gt; &lt;code&gt;$wget https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.4.12/zookeeper-3.4.12.tar.gz&lt;/code&gt;
    
    </summary>
    
      <category term="开发工具" scheme="http://blog.daiwoniu.com/categories/develop-tool/"/>
    
    
      <category term="linux" scheme="http://blog.daiwoniu.com/tags/linux/"/>
    
      <category term="zookeeper" scheme="http://blog.daiwoniu.com/tags/zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>ActiveMQ随笔</title>
    <link href="http://blog.daiwoniu.com/posts/java/2017-05-03-activemq-suibi.html"/>
    <id>http://blog.daiwoniu.com/posts/java/2017-05-03-activemq-suibi.html</id>
    <published>2017-05-03T09:32:23.000Z</published>
    <updated>2017-05-03T09:32:23.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2017-05-03-17-32-23"><a href="#2017-05-03-17-32-23" class="headerlink" title="2017-05-03 17:32:23"></a>2017-05-03 17:32:23</h3><p>主要记录下如何通过java操作ActiveMQ消息队列，都是些最初级的使用，(^o^)/~<br><a id="more"></a></p><h6 id="方式一："><a href="#方式一：" class="headerlink" title="方式一："></a>方式一：</h6><p>直接通过activemq基础方式来操作mq队列</p><ol><li><p>依赖<br>建议使用maven方式引入依赖，如就是不想用maven方式，请结合图片自行下载相关jar，或联系本博主<br><img src="/img/activemq-suibi/1.png" alt="方式一依赖"></p></li><li><p>主要java代码</p><ul><li>初始化链接工厂<blockquote><p>// 连接地址<br>private static final String mqURL = “tcp://127.0.0.1:61616”;<br>// 连接账号,<br>// 默认是不需要用户名密码直接链接的<br>// 需要mq修改配置支持通过账号密码链接<br>private static final String mqUser = “admin”;// ActiveMQConnection.DEFAULT_USER;<br>// 连接密码<br>private static final String mqPwd = “admin”;// ActiveMQConnection.DEFAULT_PASSWORD;<br>// ConnectionFactory ：连接工厂，用它创建连接<br>// 构造ConnectionFactory实例对象，根据用户名，密码，url创建一个连接工厂<br><strong> ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(mqUser, mqPwd, mqURL); </strong> </p></blockquote></li><li>从工厂得到连接对象<blockquote><p>// Connection ：客户端到MQ的连接<br>// 构造从工厂得到连接对象<br><strong> Connection connection = connectionFactory.createConnection(); </strong> </p></blockquote></li><li>创建一个session对象<blockquote><p> // Session： 一个发送或接收消息的线程<br>//创建一个session<br>//第一个参数:是否支持事务，如果为true，则会忽略第二个参数，被jms服务器设置为SESSION_TRANSACTED<br>//第一个参数为false时，第二个参数的值可为Session.AUTO_ACKNOWLEDGE，Session.CLIENT_ACKNOWLEDGE，DUPS_OK_ACKNOWLEDGE的其中一个。<br>//Session.AUTO_ACKNOWLEDGE为自动确认，客户端发送和接收消息不需要做额外的工作。哪怕是接收端发生异常，也会被当作正常发送成功。<br>//Session.CLIENT_ACKNOWLEDGE为客户端确认。客户端接收到消息后，必须调用javax.jms.Message的acknowledge方法。mq服务器才会当作发送成功，并删除消息。<br>//DUPS_OK_ACKNOWLEDGE允许副本的确认模式。一旦接收方应用程序的方法调用从处理消息处返回，会话对象就会确认消息的接收；而且允许重复确认。<br><strong> Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE); </strong> </p></blockquote></li><li>创建一个到达的目的地对象<blockquote><p> // Destination ：消息的目的地;消息发送给谁.<br>// 其实就是连接到哪个队列<br>// 如果是点对点，那么它的实现是Queue<br>// 如果是订阅模式，那它的实现是Topic<br>//创建一个到达的目的地，因为activemq不可能同时只能跑一个队列，这里就是连接了一个名为”Queues_Test”的队列，消息将会送到这个队列<br>// 当然，如果这个队列不存在，将会被创建<br><strong> Destination destination = session.createQueue(“Queues_Test”); </strong> </p></blockquote></li><li>得到消息生成者来发送消息<blockquote><p>// 得到消息生成者【发送者】<br><strong> MessageProducer producer = session.createProducer(destination); </strong><br>// 设置生产者的模式，有两种可选<br>//DeliveryMode.PERSISTENT 当activemq关闭的时候，队列数据将会被保存<br>//DeliveryMode.NON_PERSISTENT 当activemq关闭的时候，队列里面的数据将会被清空<br><strong> producer.setDeliveryMode(DeliveryMode.PERSISTENT); </strong><br>// 消息的优先级。0-4为正常的优先级，5-9为高优先级<br>// producer.setPriority(5);<br>// 设置true，message才可以自定义Timestamp<br>// producer.setDisableMessageTimestamp(true);<br>// 设置该消息的超时时间毫秒，默认值为0，表示消息永不过期，过期的消息会从队列中清除，并存储到ActiveMQ.DLQ这个队列里面。<br>// producer.setTimeToLive(1000);<br>//创建一个文本消息<br><strong> TextMessage message = session.createTextMessage(“ActiveMq 发送的消息：” + i); </strong><br>message.setJMSType(“String”); // 自定义类型<br>message.setJMSTimestamp(System.currentTimeMillis()); // 以自定义Timestamp<br>message.setJMSCorrelationID(“CorrelationID:” + i);<br>// 如果这个值为true，表示消息是被重新发送了。<br>// 因为有时消费者没有确认他已经收到消息或者提供者不确定消费者是否已经收到。<br>// message.setJMSRedelivered(true);<br>// 发送消息<br><strong> producer.send(message); </strong> </p></blockquote></li><li>得到消费者来接收消息<blockquote><p>// 得到消费者【消息接收者】 方式一<br><strong> MessageConsumer consumer = session.createConsumer(destination); </strong><br>// 获取一个文本消息<br><strong> TextMessage message = (TextMessage) consumer.receive(10); </strong> // 获取消息等待毫秒数<br>System.out.println(“收到消息” + <strong> message.getText() </strong>);<br><strong><em> 下面这种方式必须在发送消息前就设置好监听 </em></strong><br>// 得到消费者【消息接收者】 方式二<br>MessageConsumer consumer = session.createConsumer(destination);<br>// 通过监听自动接收消息<br>consumer.setMessageListener(new MessageListener() {<br>@Override<br>public void onMessage(Message message) {<br>   try {<br>   //获取到接收的数据<br>   String text = ((TextMessage)message).getText();<br>   System.out.println(“收到消息” + text);<br>   } catch (JMSException e) {<br>   e.printStackTrace();<br>   }<br>}<br>});</p></blockquote></li></ul></li></ol><h6 id="方式二："><a href="#方式二：" class="headerlink" title="方式二："></a>方式二：</h6><p>和spring-jms整合，通过配置交由spring来管理操作mq队列</p><ol><li><p>依赖<br> 建议使用maven方式引入依赖，如就是不想用maven方式，请结合图片自行下载相关jar，或联系本博主<br> <img src="/img/activemq-suibi/2.png" alt="方式二依赖"></p></li><li><p>主要spring配置</p><ul><li>配置链接工厂：<blockquote><p>&lt;!-- ActiveMQ 连接工厂 --&gt;<br>&lt;!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供 --&gt;<br>&lt;!-- 如连接网络：tcp://ip:61616 以及用户名，密码 --&gt;<br>&lt;!-- &lt;amq:connectionFactory id=”amqConnectionFactory” brokerURL=”${activemq.brokerURL}“ userName=”${activemq.userName}“ password=”${activemq.password}“  /&gt; --&gt;<br><strong> &lt;bean id=”targetConnectionFactory” class=”org.apache.activemq.ActiveMQConnectionFactory”&gt;<br> &lt;property name=”brokerURL” value=”${activemq.brokerURL}” /&gt;<br> &lt;property name=”userName” value=”${activemq.userName}” /&gt;<br> &lt;property name=”password” value=”${activemq.password}” /&gt;<br>&lt;/bean&gt; </strong><br>&lt;!-- Spring Caching连接工厂 --&gt;<br>&lt;!--connectionFactory是Spring用于创建到JMS服务器链接的，Spring提供了多种connectionFactory，常用的两个SingleConnectionFactory和CachingConnectionFactory。--&gt;<br>&lt;!--SingleConnectionFactory：对于建立JMS服务器链接的请求会一直返回同一个链接，并且会忽略Connection的close方法调用。--&gt;<br>&lt;!--CachingConnectionFactory：继承了SingleConnectionFactory，所以它拥有SingleConnectionFactory的所有功能，同时它还新增了缓存功能，它可以缓存Session、MessageProducer和MessageConsumer --&gt;<br><strong> &lt;bean id=”connectionFactory” class=”org.springframework.jms.connection.CachingConnectionFactory”&gt; </strong><br> &lt;!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory --&gt;<br> <strong> &lt;property name=”targetConnectionFactory” ref=”targetConnectionFactory” /&gt; </strong><br> &lt;!-- Session缓存数量 --&gt;<br> <strong> &lt;property name=”sessionCacheSize” value=”${activemq.sessionCacheSize}” /&gt; </strong><br><strong> &lt;/bean&gt; </strong> </p></blockquote></li><li>配置队列目的地<blockquote><p> &lt;!--这个是队列目的地 --&gt;<br><strong> &lt;bean id=”defaultQueueDestination” class=”org.apache.activemq.command.ActiveMQQueue”&gt;<br>&lt;constructor-arg&gt;<br>  &lt;value&gt;${activemq.defaultDestinationName}&lt;/value&gt;<br>&lt;/constructor-arg&gt;<br>&lt;/bean&gt; </strong><br>&lt;!-- 定义JmsTemplate的Queue队列类型 –&gt;<br>&lt;!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 --&gt;<br><strong> &lt;bean id=”jmsQueueTemplate” class=”org.springframework.jms.core.JmsTemplate”&gt; </strong><br>&lt;!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 --&gt;<br> <strong> &lt;constructor-arg ref=”connectionFactory” /&gt;<br> &lt;property name=”defaultDestination” ref=”defaultQueueDestination” /&gt; </strong><br> &lt;!-- 非pub/sub模型（发布/订阅），即点对点队列模式 --&gt;<br> <strong> &lt;property name=”pubSubDomain” value=”false” /&gt;<br> &lt;property name=”receiveTimeout” value=”${activemq.receiveTimeout}” /&gt;<br> &lt;property name=”deliveryMode” value=”${activemq.deliveryMode}” /&gt;<br>&lt;/bean&gt; </strong></p></blockquote></li><li>配置消息监听适配器<blockquote><p> &lt;!-- 消息监听适配器,支持三种方式，只配置其中一种即可 --&gt;<br>&lt;!-- 方式一：单纯接收消息，依赖接口，如果要回复或者发送消息要在代码里面去重新获取一个Connection或Session --&gt;<br><strong> &lt;bean id=”myMessageListener” class=”mq.MyMessageListener” /&gt; </strong><br>&lt;!-- 方式二：接收到消息，依赖接口，参数包含session，并且可以通过session直接回复或者发送消息 --&gt;<br><strong> &lt;bean id=”mySessionAwareMessageListener” class=”mq.MySessionAwareMessageListener”&gt;<br>&lt;property name=”destination” ref=”defaultQueueDestination” /&gt;<br>&lt;/bean&gt; </strong><br>&lt;!-- 方式三：接收消息，不依赖接口，可以自定义处理消息方法，如果方法返回值有内容，会自动回复或发送消息 --&gt;<br><strong> &lt;bean id=”myMessageListenerAdapter” class=”org.springframework.jms.listener.adapter.MessageListenerAdapter”&gt;<br>&lt;constructor-arg&gt;<br>  &lt;bean class=”mq.MyMessageListenerAdapter”/&gt;<br>&lt;/constructor-arg&gt; </strong><br>&lt;!--处理消息的方法 --&gt;<br><strong> &lt;property name=”defaultListenerMethod” value=”receiveMessageObj”/&gt; </strong><br>&lt;!--回复或者发送消息的目标地址 --&gt;<br><strong> &lt;property name=”defaultResponseDestination” ref=”defaultQueueDestination”/&gt;<br>&lt;/bean&gt; </strong><br>&lt;!-- 定义Queue监听器 --&gt;<br><strong> &lt;jms:listener-container destination-type=”queue” container-type=”default” connection-factory=”connectionFactory” acknowledge=”auto”&gt;<br>&lt;jms:listener destination=”${activemq.defaultDestinationName}” ref=”myMessageListener”/&gt;<br>&lt;jms:listener destination=”Queues_Test2” ref=”mySessionAwareMessageListener”/&gt;<br>&lt;jms:listener destination=”Queues_Test3” ref=”myMessageListenerAdapter” /&gt;<br>&lt;/jms:listener-container&gt; </strong></p></blockquote></li></ul></li><li><p>主要java代码</p><ul><li>定义消息监听器：<blockquote><p>// 方式一<br>import javax.jms.JMSException;<br>import javax.jms.Message;<br>import javax.jms.MessageListener;<br>import javax.jms.TextMessage;<br>/**<br>* 单纯接收消息，如果要回复或者发送消息要在代码里面去重新获取一个Connection或Session<br>* Created by daiwoniu on 2017/4/21.<br>*/<br>public class MyMessageListener implements MessageListener {<br>@Override<br>public void onMessage(Message message) {<br>TextMessage textMsg = (TextMessage) message;<br>try {<br>System.out.println(“MyMessageListener接收到消息内容是：” + textMsg.getText());<br>} catch (JMSException e) {<br>e.printStackTrace();<br>}<br>}<br>}<br>// 方式二<br>import org.springframework.jms.listener.SessionAwareMessageListener;<br>import javax.jms.<em>;<br>/\</em>*<br>* 接收到消息，并且可以通过session直接回复或者发送消息<br>* Created by daiwoniu on 2017/4/21.<br>*/<br>public class MySessionAwareMessageListener implements SessionAwareMessageListener<textmessage> {<br>@Override<br>public void onMessage(TextMessage message, Session session) throws JMSException {<br>System.out.println(“MySessionAwareMessageListener收到消息内容是：” + message.getText());<br>// 发送消息<br>MessageProducer producer = session.createProducer(destination);<br>Message textMessage = session.createTextMessage(“ConsumerSessionAwareMessageListener。。。”);<br>producer.send(textMessage);<br>}<br>private Destination destination;<br>public Destination getDestination() {<br>return destination;<br>}<br>public void setDestination(Destination destination) {<br>this.destination = destination;<br>}<br>}<br>// 方式三<br>/**<br>* 接收消息，不依赖接口<br>* 如果返回值有内容，会自动回复或发送消息<br>* Created by daiwoniu on 2017/4/21.<br>*/<br>public class MyMessageListenerAdapter {<br>/**<br>* 如果没有指定接收处理的方法，默认调用handleMessage方法<br>* @param message<br>*/<br>public void handleMessage(String message) {<br>   System.out.println(“MyMessageListenerAdapter通过handleMessage接收到一个纯文本消息，消息内容是：” + message);<br>}<br>public void receiveMessage(String message) {<br>   System.out.println(“MyMessageListenerAdapter通过receiveMessage接收到一个纯文本消息，消息内容是：” + message);<br>}<br>public String  receiveAndSendMessage(String message) {<br>   System.out.println(“MyMessageListenerAdapter通过receiveAndSendMessage接收到一个纯文本消息，消息内容是：” + message);<br>   return “这是MyMessageListenerAdapter对象的receiveAndSendMessage方法的返回值。”;<br>}<br>// MessageEntity是自己定义的实体类<br>public void receiveMessageObj(MessageEntity message) {<br>   System.out.println(“MyMessageListenerAdapter通过receiveMessageObj接收到一个纯文本消息，消息内容是：” + message.toJSON());<br>}<br>}</textmessage></p></blockquote></li><li>发送消息<blockquote><p>// 获取spring的jms队列处理类<br>JmsTemplate jmsQueueTemplate = SpringUtil.getAc().getBean(“jmsQueueTemplate”, JmsTemplate.class);<br>// 发送，send方法参数有很多种，可以自行查看<br>jmsQueueTemplate.send(new MessageCreator() {<br>@Override<br>public Message createMessage(Session session) throws JMSException {<br>return session.createTextMessage(“哈哈哈，终于写完了”);<br>}<br>});</p></blockquote></li></ul></li></ol><p>从MQ页面管理后台查看的消息<br><img src="/img/activemq-suibi/3.png" alt="消息内容"></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;2017-05-03-17-32-23&quot;&gt;&lt;a href=&quot;#2017-05-03-17-32-23&quot; class=&quot;headerlink&quot; title=&quot;2017-05-03 17:32:23&quot;&gt;&lt;/a&gt;2017-05-03 17:32:23&lt;/h3&gt;&lt;p&gt;主要记录下如何通过java操作ActiveMQ消息队列，都是些最初级的使用，(^o^)/~&lt;br&gt;
    
    </summary>
    
      <category term="java" scheme="http://blog.daiwoniu.com/categories/java/"/>
    
    
      <category term="随笔" scheme="http://blog.daiwoniu.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="jave" scheme="http://blog.daiwoniu.com/tags/jave/"/>
    
      <category term="activemq" scheme="http://blog.daiwoniu.com/tags/activemq/"/>
    
      <category term="jms" scheme="http://blog.daiwoniu.com/tags/jms/"/>
    
      <category term="队列" scheme="http://blog.daiwoniu.com/tags/%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>linux下搭建ActiveMQ</title>
    <link href="http://blog.daiwoniu.com/posts/develop-tool/2017-05-02-linux-activemq.html"/>
    <id>http://blog.daiwoniu.com/posts/develop-tool/2017-05-02-linux-activemq.html</id>
    <published>2017-05-02T05:14:10.000Z</published>
    <updated>2017-05-02T05:14:10.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="ActiveMQ是什么？"><a href="#ActiveMQ是什么？" class="headerlink" title="ActiveMQ是什么？"></a>ActiveMQ是什么？</h4><blockquote><p>ActiveMQ就不多做解释了，如果不知道的基本也就没必要看了，请执行百度Google一下。</p></blockquote><h4 id="ActiveMQ安装"><a href="#ActiveMQ安装" class="headerlink" title="ActiveMQ安装"></a>ActiveMQ安装</h4><blockquote><ol><li>下载<br> <code>$wget http://archive.apache.org/dist/activemq/5.14.4/apache-activemq-5.14.4-bin.tar.gz</code><a id="more"></a></li><li>安装 <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line"><span class="comment">// 解压 </span></span><br><span class="line"><span class="variable">$tar</span> -xzf apache-activemq-<span class="number">5.14</span>.<span class="number">4</span>-bin<span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line">$</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="3"><li>启动 <figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span></span><br><span class="line"><span class="comment">// 默认8061端口，默认用户admin/admin</span></span><br><span class="line"><span class="symbol">$</span>./bin/activemq start</span><br><span class="line"><span class="comment">// 查看启动状态</span></span><br><span class="line"><span class="symbol">$</span>./bin/activemq status</span><br><span class="line"><span class="comment">// 重启</span></span><br><span class="line"><span class="symbol">$</span>./bin/activemq restart</span><br><span class="line"></span><br><span class="line"><span class="comment">// 直接在浏览器打开：127.0.0.1:8061</span></span><br><span class="line"><span class="symbol">$</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="4"><li>关于相关配置 <figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span></span><br><span class="line"><span class="comment">// 修改web后台页面的登录用户密码</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$vi</span> conf/jetty-realm.properties</span></span><br><span class="line"><span class="comment">// 修改倒数第二行，那里三个分别是用户名，密码，角色，其中admin角色是固定的</span></span><br><span class="line"><span class="symbol">$</span></span><br><span class="line"><span class="symbol">$</span> 修改java程序链接时开启密码验证（默认是不需要用户名密码直接链接的）</span><br><span class="line"><span class="meta"><span class="meta-keyword">$vi</span> conf/activemq.xml</span></span><br><span class="line"><span class="comment">// 在&lt;broker&gt;节点中加入以下内容</span></span><br><span class="line">&lt;plugins&gt;</span><br><span class="line"> &lt;simpleAuthenticationPlugin&gt;</span><br><span class="line">   &lt;users&gt;</span><br><span class="line">    &lt;authenticationUser username=<span class="string">"$&#123;activemq.username&#125;"</span> password=<span class="string">"$&#123;activemq.password&#125;"</span> groups=<span class="string">"users,admins"</span>/&gt;</span><br><span class="line">   &lt;/users&gt;</span><br><span class="line"> &lt;/simpleAuthenticationPlugin&gt;</span><br><span class="line">&lt;/plugins&gt;</span><br><span class="line"><span class="symbol">$</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$vi</span> conf/credentials.properties</span></span><br><span class="line"><span class="comment">// 倒数二三行，修改用户名和密码</span></span><br><span class="line"><span class="symbol">$</span> </span><br><span class="line"><span class="comment">// 修改broker摘要信息</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$vi</span> conf/activemq.xml</span></span><br><span class="line"><span class="comment">// 修改broker节点的属性</span></span><br><span class="line"><span class="symbol">$</span></span><br><span class="line">```</span><br></pre></td></tr></table></figure></li></ol></blockquote><h4 id="ActiveMQ使用"><a href="#ActiveMQ使用" class="headerlink" title="ActiveMQ使用"></a>ActiveMQ使用</h4>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;ActiveMQ是什么？&quot;&gt;&lt;a href=&quot;#ActiveMQ是什么？&quot; class=&quot;headerlink&quot; title=&quot;ActiveMQ是什么？&quot;&gt;&lt;/a&gt;ActiveMQ是什么？&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;ActiveMQ就不多做解释了，如果不知道的基本也就没必要看了，请执行百度Google一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;ActiveMQ安装&quot;&gt;&lt;a href=&quot;#ActiveMQ安装&quot; class=&quot;headerlink&quot; title=&quot;ActiveMQ安装&quot;&gt;&lt;/a&gt;ActiveMQ安装&lt;/h4&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;下载&lt;br&gt; &lt;code&gt;$wget http://archive.apache.org/dist/activemq/5.14.4/apache-activemq-5.14.4-bin.tar.gz&lt;/code&gt;
    
    </summary>
    
      <category term="开发工具" scheme="http://blog.daiwoniu.com/categories/develop-tool/"/>
    
    
      <category term="linux" scheme="http://blog.daiwoniu.com/tags/linux/"/>
    
      <category term="activemq" scheme="http://blog.daiwoniu.com/tags/activemq/"/>
    
      <category term="队列" scheme="http://blog.daiwoniu.com/tags/%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>nginx随笔</title>
    <link href="http://blog.daiwoniu.com/posts/develop-tool/2016-09-05-nginx-suibi.html"/>
    <id>http://blog.daiwoniu.com/posts/develop-tool/2016-09-05-nginx-suibi.html</id>
    <published>2016-09-05T08:14:10.000Z</published>
    <updated>2018-12-24T06:37:10.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2016-09-05-16-14-10"><a href="#2016-09-05-16-14-10" class="headerlink" title="2016-09-05 16:14:10"></a>2016-09-05 16:14:10</h3><h6 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h6><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line"><span class="variable">$cd</span> /opt/app/nginx-<span class="number">1.10</span>.<span class="number">1</span>    <span class="comment">// 进入安装目录</span></span><br><span class="line"><span class="variable">$sbin</span>/nginx -t     <span class="comment">// 检查配置文件ngnix.conf的正确性</span></span><br><span class="line"><span class="variable">$sbin</span>/nginx    <span class="comment">// 启动</span></span><br><span class="line"><span class="variable">$sbin</span>/nginx -s reload    <span class="comment">// 重新载入配置文件</span></span><br><span class="line"><span class="variable">$sbin</span>/nginx -s reopen    <span class="comment">// 重启 Nginx</span></span><br><span class="line"><span class="variable">$sbin</span>/nginx -s stop     <span class="comment">// 停止 Nginx</span></span><br><span class="line">$</span><br></pre></td></tr></table></figure><h6 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h6><p>进入安装目录 <code>$cd /opt/app/nginx-1.10.1</code><br>nginx.conf 文件是nginx的主入口配置<br><a id="more"></a><br>1.配置引入其他配置文件<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line"><span class="variable">$vi</span> nginx.conf</span><br><span class="line">http &#123;</span><br><span class="line">    ......</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span>       conf.d/*.conf;     <span class="comment">#导入配置文件</span></span><br><span class="line">&#125;</span><br><span class="line">$</span><br></pre></td></tr></table></figure></p><p>2.配置一个请求转发<br>在conf.d目录下创建test.conf 文件，内容为<br><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line"><span class="variable">$vi</span> test.conf</span><br><span class="line"><span class="keyword">server</span> &#123;</span><br><span class="line">        listen       <span class="number">80</span>;      <span class="comment">#监听80端口</span></span><br><span class="line">        server_name  test.com www.test.com;  <span class="comment">#请求的域名， 多个用空格隔开</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_redirect off;</span><br><span class="line">            proxy_set_header Host <span class="variable">$host</span>;    <span class="comment"># 将请求的域名写入请求头</span></span><br><span class="line">            proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;   <span class="comment"># 将来源ip写入请求头</span></span><br><span class="line">            proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;    <span class="comment"># 将来源ip写入请求头</span></span><br><span class="line">            proxy_pass http://<span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">8080</span>;    <span class="comment"># 转发到目标地址</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">error_page</span>   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.<span class="keyword">html</span> &#123;</span><br><span class="line">            <span class="literal">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">$</span><br></pre></td></tr></table></figure></p><p>3.配置文件中的一些变量<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$arg</span>_PARAMETER      // 功能：如果在请求中设置了查询字符串，那么这个变量包含在查询字符串是GET请求PARAMETER中的值。</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$args</span>                // 功能：该变量的值是GET请求在请求行中的参数。</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$binary</span>_remote_addr  // 功能：二进制格式的客户端地址</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$body</span>_bytes_sent    // 功能：响应体的大小，即使发生了中断或者是放弃，也是一样的准确。</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$content</span>_length   // 功能：该变量的值等于请求头中的Content-length字段的值</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$cookie</span>_COOKIE   // 功能：该变量的值是cookie COOKIE的值</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$document</span>_root  // 功能：该变量的值为当前请求的location（http，server，location，location中的if）中root指令中指定的值。</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$document</span>_uri   // 功能：同$uri</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$host</span>           // 功能：该变量的值等于请求头中Host的值。如果Host无效时，那么就是处理该请求的server的名称。</span></span><br><span class="line">                         在下列情况中，<span class="symbol">$</span>host变量的取值不同于<span class="symbol">$</span>http_host变量:</span><br><span class="line">                            当请求头中的Host字段未指定（使用默认值）或者为空值，那么<span class="symbol">$</span>host等于server_name指令指定的值。</span><br><span class="line">                            当Host字段包含端口是，<span class="symbol">$</span>host并不包含端口号。另外，从<span class="number">0.8</span><span class="number">.17</span>之后的nginx中，<span class="symbol">$</span>host的值总是小写。</span><br><span class="line"><span class="meta"><span class="meta-keyword">$hostname</span>              // 功能：有gethostname返回值设置机器名。</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$http</span>_HEADER           // 功能：该变量的值为HTTP 请求头HEADER，具体使用时会转换为小写，并且将“——”（破折号）转换为"_"(下划线)。</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$is</span>_args               // 功能： 如果设置了$args，那么值为“？”，否则为“”</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$limit</span>_rate            // 功能：该变量允许限制连接速率。</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$nginx</span>_version         // 功能： 当前运行的nginx的版本号</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$query</span>_string          // 功能：同$args</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$remote</span>_addr           // 功能：客户端的IP地址</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$remote</span>_user           // 功能： 该变量等于用户的名字，基本身份验证模块使用。</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$remote</span>_port           // 功能： 客户端连接端口</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$request</span>_filename      // 功能：该变量等于当前请求文件的路径，有指令root或者alias和URI构成。</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$request</span>_body          // 功能：该变量包含了请求体的主要信息。该变量与proxy_pass或者fastcgi_pass相关。</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$request</span>_body_file     // 功能：客户端请求体的临时文件。</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$request</span>_completion   // 功能：如果请求成功完成，那么显示“OK”。如果请求没有完成或者请求不是该请求系列的最后一部分，那么它的值为空。</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$request</span>_method     // 功能：该变量的值通常是GET或者POST。</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$request</span>_uri      // 功能：该变量的值等于原始的URI请求，就是说从客户端收到的参数包括了原始请求的URI，该值是不可以被修改的，不包含主机名，例如“/foo/bar.php?arg=baz”。</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$scheme</span>          // 功能：该变量表示HTTP scheme（例如HTTP，HTTPS），根据实际使用情况来决定，例如：rewrite  ^ $scheme://example.com$uri redirect;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$server</span>_addr     // 功能：该变量的值等于服务器的地址。通常来说，在完成一次系统调用之后就会获取变量的值，为了避开系统钓鱼，那么必须在listen指令中使用bind参数。</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$server</span>_name     // 功能：该变量为server的名字。</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$server</span>)port     // 功能：该变量等于接收请求的端口。</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$server</span>_protocol // 功能：该变量的值为请求协议的值，通常是HTTP/1.0或者HTTP/1.1</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$uri</span>             // 功能：该变量的值等于当前请求中的URI（没有参数，不包括$args）的值。</span></span><br><span class="line">                          它的值不同于request_uri，由浏览器客户端发送的request_uri的值。例如，可能会被内部重定向或者使用index。</span><br><span class="line">  另外需要注意：<span class="symbol">$</span>uri不包含主机名，例如 <span class="string">"/foo/bar.html"</span> 当前判断URL= <span class="symbol">$</span>scheme:<span class="comment">//$server_name/$url</span></span><br><span class="line"><span class="symbol">$</span></span><br></pre></td></tr></table></figure></p><h3 id="2016-11-11-14-17-10"><a href="#2016-11-11-14-17-10" class="headerlink" title="2016-11-11 14:17:10"></a>2016-11-11 14:17:10</h3><p>4.配置一个负载均衡<br>在conf.d目录下创建test2.conf 文件，内容为<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line">$vi test2.conf</span><br><span class="line">    upstream test2&#123;</span><br><span class="line">      ip_hash;  <span class="comment">#每个请求按访问ip地址的前三个段位信息的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。</span></span><br><span class="line">      <span class="comment">#hash $request_uri;   #需要第三方插件，按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。</span></span><br><span class="line">      server <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">8080</span>;</span><br><span class="line">      server <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">8081</span> down;  <span class="comment">#(down 表示单前的server暂时不参与负载)</span></span><br><span class="line">      server <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">8082</span> <span class="attr">weight=</span><span class="number">2</span>;  <span class="comment">#(weight 默认为1.weight越大，负载的权重就越大)  </span></span><br><span class="line">      server <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">8083</span> backup;  <span class="comment">#(其它所有的非backup机器down或者忙的时候，请求backup机器)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       <span class="number">80</span>;      <span class="comment">#监听80端口</span></span><br><span class="line">        server_name  test2.com www.test2.com;  <span class="comment">#请求的域名， 多个用空格隔开</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">location</span> <span class="title">/ &#123;</span></span><br><span class="line"><span class="title">            proxy_redirect</span> off;</span><br><span class="line">            proxy_set_header Host $host;    <span class="comment"># 将请求的域名写入请求头</span></span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr;   <span class="comment"># 将来源ip写入请求头</span></span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    <span class="comment"># 将来源ip写入请求头</span></span><br><span class="line">            proxy_pass http://test2;    <span class="comment"># 转发到服务器组</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">location</span> <span class="title">~ .*\.(gif</span>|jpg|jpeg|png|bmp|swf|js|css)$ &#123;</span><br><span class="line">                expires <span class="number">1</span>d;   <span class="comment"># 缓存一天</span></span><br><span class="line">                proxy_pass http://test2;</span><br><span class="line">                <span class="comment">#root  /opt/td-platform/current/webapp;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /<span class="number">50</span>x.html;</span><br><span class="line">        <span class="keyword">location</span> <span class="title">= /50x</span>.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">$</span><br></pre></td></tr></table></figure></p><p>5.配置php<br>在conf.d目录下创建test3.conf 文件，内容为<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line"><span class="variable">$vi</span> test3.conf</span><br><span class="line">   <span class="built_in"> server </span>&#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  test3.com www.test3.com;  #请求的域名， 多个用空格隔开</span><br><span class="line">        root /home/php/htdocs; #php项目根目录，不是php的安装目录</span><br><span class="line">        index           index.html index.htm index.php;   #  首页</span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">       location / &#123;</span><br><span class="line">            <span class="keyword">if</span> (!-e <span class="variable">$request_filename</span>)&#123;    #  出现必须地址/后必须跟index.php才能访问，这地方配置下转发，/自动转发到/index.php</span><br><span class="line">                rewrite ^(.*)$ /index.php<span class="variable">$1</span> last;</span><br><span class="line">            &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       location ~ .*\.php(\/.*)*$ &#123;</span><br><span class="line">            # root /home/php/htdocs; #php项目根目录，不是php的安装目录</span><br><span class="line">            fastcgi_pass 127.0.0.1:9100;   #php-fpm.conf中listen的配置</span><br><span class="line">            fastcgi_index index.php;</span><br><span class="line">            fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">            include fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # redirect<span class="built_in"> server </span><span class="builtin-name">error</span> pages <span class="keyword">to</span> the static<span class="built_in"> page </span>/40x.html</span><br><span class="line">        #</span><br><span class="line">        error_page  404              /404.html;</span><br><span class="line">        location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # redirect<span class="built_in"> server </span><span class="builtin-name">error</span> pages <span class="keyword">to</span> the static<span class="built_in"> page </span>/50x.html</span><br><span class="line">        #</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;</span><br><span class="line">$</span><br></pre></td></tr></table></figure></p><p>6.配置和优化<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br></pre></td><td class="code"><pre><span class="line">nginx指令中的优化（配置文件）</span><br><span class="line"></span><br><span class="line">worker_processes 8;</span><br><span class="line">　　nginx进程数，建议按照cpu数目来指定，一般为它的倍数。</span><br><span class="line"></span><br><span class="line">worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;</span><br><span class="line">　　为每个进程分配cpu，上例中将8个进程分配到8个cpu，当然可以写多个，或者将一个进程分配到多个cpu。</span><br><span class="line"></span><br><span class="line">worker_rlimit_nofile 102400;</span><br><span class="line">　　这个指令是指当一个nginx进程打开的最多文件描述符数目，理论值应该是最多打开文件数（ulimit -<span class="keyword">n</span>）与nginx进程数相除，但是nginx分配请求并不是那么均匀，所以最好与ulimit -<span class="keyword">n</span>的值保持一致。</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> epoll;</span><br><span class="line">　　使用epoll的I/O模型</span><br><span class="line"></span><br><span class="line">worker_connections 102400;</span><br><span class="line">　　每个进程允许的最多连接数，理论上每台nginx服务器的最大连接数为worker_processes*worker_connections。</span><br><span class="line"></span><br><span class="line">keepalive_timeout 60;</span><br><span class="line">　　keepalive超时时间。</span><br><span class="line"></span><br><span class="line">client_header_buffer_size 4k;</span><br><span class="line">　　客户端请求头部的缓冲区大小，这个可以根据你的系统分页大小来设置，一般一个请求的头部大小不会超过1k，不过由于一般系统分页都要大于1k，所以这里设置为分页大小。分页大小可以用命令getconf PAGESIZE取得。</span><br><span class="line"></span><br><span class="line">open_file_cache max=102400 inactive=20s;</span><br><span class="line">　　这个将为打开文件指定缓存，默认是没有启用的，max指定缓存数量，建议和打开文件数一致，inactive是指经过多长时间文件没被请求后删除缓存。</span><br><span class="line"></span><br><span class="line">open_file_cache_valid 30s;</span><br><span class="line">　　这个是指多长时间检查一次缓存的有效信息。</span><br><span class="line"></span><br><span class="line">open_file_cache_min_uses 1;</span><br><span class="line">　　open_file_cache指令中的inactive参数时间内文件的最少使用次数，如果超过这个数字，文件描述符一直是在缓存中打开的，如上例，如果有一个文件在inactive时间内一次没被使用，它将被移除。</span><br><span class="line">内核参数的优化</span><br><span class="line"></span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_max_tw_buckets = 6000</span><br><span class="line">　　timewait的数量，默认是180000。</span><br><span class="line"></span><br><span class="line"><span class="keyword">net</span>.ipv4.ip_local_port_range = 1024    65000</span><br><span class="line">　　允许系统打开的端口范围。</span><br><span class="line"></span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_tw_recycle = 1</span><br><span class="line">　　启用timewait快速回收。</span><br><span class="line"></span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_tw_reuse = 1</span><br><span class="line">　　开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接。</span><br><span class="line"></span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_syncookies = 1</span><br><span class="line">　　开启SYN Cookies，当出现SYN等待队列溢出时，启用cookies来处理。</span><br><span class="line"></span><br><span class="line"><span class="keyword">net</span>.core.somaxconn = 262144</span><br><span class="line">web应用中listen函数的backlog默认会给我们内核参数的<span class="keyword">net</span>.core.somaxconn限制到128，而nginx定义的NGX_LISTEN_BACKLOG默认为511，所以有必要调整这个值。</span><br><span class="line">也可以在nginx配置文件的linsten 80 后面加上这个backlog参数，但是不能超过内核里面设定的数值，如下：</span><br><span class="line"></span><br><span class="line">Linsten 80 backlog=65533;</span><br><span class="line"><span class="keyword">net</span>.core.netdev_max_backlog = 262144</span><br><span class="line">　　每个网络接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目。</span><br><span class="line"></span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_max_orphans = 262144</span><br><span class="line">　　系统中最多有多少个TCP套接字不被关联到任何一个用户文件句柄上。如果超过这个数字，孤儿连接将即刻被复位并打印出警告信息。这个限制仅仅是为了防止简单的DoS攻击，不能过分依靠它或者人为地减小这个值，更应该增加这个值(如果增加了内存之后)。</span><br><span class="line"></span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_max_syn_backlog = 262144</span><br><span class="line">　　记录的那些尚未收到客户端确认信息的连接请求的最大值。对于有128M内存的系统而言，缺省值是1024，小内存的系统则是128。</span><br><span class="line"></span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_timestamps = 0</span><br><span class="line">　　时间戳可以避免序列号的卷绕。一个1Gbps的链路肯定会遇到以前用过的序列号。时间戳能够让内核接受这种”异常”的数据包。这里需要将其关掉。</span><br><span class="line"></span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_synack_retries = 1</span><br><span class="line">　　为了打开对端的连接，内核需要发送一个SYN并附带一个回应前面一个SYN的ACK。也就是所谓三次握手中的第二次握手。这个设置决定了内核放弃连接之前发送SYN+ACK包的数量。</span><br><span class="line"></span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_syn_retries = 1</span><br><span class="line">　　在内核放弃建立连接之前发送SYN包的数量。</span><br><span class="line"></span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_fin_timeout = 1</span><br><span class="line">　　如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间。对端可以出错并永远不关闭连接，甚至意外当机。缺省值是60秒。2.2 内核的通常值是180秒，你可以按这个设置，但要记住的是，即使你的机器是一个轻载的WEB服务器，也有因为大量的死套接字而内存溢出的风险，FIN- WAIT-2的危险性比FIN-WAIT-1要小，因为它最多只能吃掉1.5K内存，但是它们的生存期长些。</span><br><span class="line"></span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_keepalive_time = 30</span><br><span class="line">　　当keepalive起用的时候，TCP发送keepalive消息的频度。缺省是2小时。</span><br><span class="line"></span><br><span class="line">一个完整的内核优化配置</span><br><span class="line"></span><br><span class="line"><span class="keyword">net</span>.ipv4.ip_forward = 0</span><br><span class="line"><span class="keyword">net</span>.ipv4.<span class="keyword">conf</span>.default.rp_filter = 1</span><br><span class="line"><span class="keyword">net</span>.ipv4.<span class="keyword">conf</span>.default.accept_source_route = 0</span><br><span class="line">kernel.sysrq = 0</span><br><span class="line">kernel.core_uses_pid = 1</span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_syncookies = 1</span><br><span class="line">kernel.msgmnb = 65536</span><br><span class="line">kernel.msgmax = 65536</span><br><span class="line">kernel.shmmax = 68719476736</span><br><span class="line">kernel.shmall = 4294967296</span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_max_tw_buckets = 6000</span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_sack = 1</span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_window_scaling = 1</span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_rmem = 4096        87380   4194304</span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_wmem = 4096        16384   4194304</span><br><span class="line"><span class="keyword">net</span>.core.wmem_default = 8388608</span><br><span class="line"><span class="keyword">net</span>.core.rmem_default = 8388608</span><br><span class="line"><span class="keyword">net</span>.core.rmem_max = 16777216</span><br><span class="line"><span class="keyword">net</span>.core.wmem_max = 16777216</span><br><span class="line"><span class="keyword">net</span>.core.netdev_max_backlog = 262144</span><br><span class="line"><span class="keyword">net</span>.core.somaxconn = 262144</span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_max_orphans = 3276800</span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_max_syn_backlog = 262144</span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_timestamps = 0</span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_synack_retries = 1</span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_syn_retries = 1</span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_tw_recycle = 1</span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_tw_reuse = 1</span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_mem = 94500000 915000000 927000000</span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_fin_timeout = 1</span><br><span class="line"><span class="keyword">net</span>.ipv4.tcp_keepalive_time = 30</span><br><span class="line"><span class="keyword">net</span>.ipv4.ip_local_port_range = 1024    65000</span><br><span class="line"></span><br><span class="line">一个简单的nginx优化配置文件</span><br><span class="line"></span><br><span class="line">user  www www;</span><br><span class="line">worker_processes 8;</span><br><span class="line">worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000;</span><br><span class="line">error_log  /www/<span class="keyword">log</span>/nginx_error.<span class="keyword">log</span>  crit;</span><br><span class="line">pid        /usr/<span class="keyword">local</span>/nginx/nginx.pid;</span><br><span class="line">worker_rlimit_nofile 204800;</span><br><span class="line"></span><br><span class="line">events</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">use</span> epoll;</span><br><span class="line">  worker_connections 204800;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">include</span>       mime.types;</span><br><span class="line">  default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">  charset  utf-8;</span><br><span class="line"></span><br><span class="line">  server_names_hash_bucket_size 128;</span><br><span class="line">  client_header_buffer_size 2k;</span><br><span class="line">  large_client_header_buffers 4 4k;</span><br><span class="line">  client_max_body_size 8m;</span><br><span class="line"></span><br><span class="line">  sendfile <span class="keyword">on</span>;</span><br><span class="line">  tcp_nopush     <span class="keyword">on</span>;</span><br><span class="line"></span><br><span class="line">  keepalive_timeout 60;</span><br><span class="line"></span><br><span class="line">  fastcgi_cache_path /usr/<span class="keyword">local</span>/nginx/fastcgi_cache <span class="keyword">levels</span>=1:2</span><br><span class="line">keys_zone=<span class="keyword">TEST</span>:10m</span><br><span class="line">inactive=5m;</span><br><span class="line">  fastcgi_connect_timeout 300;</span><br><span class="line">  fastcgi_send_timeout 300;</span><br><span class="line">  fastcgi_read_timeout 300;</span><br><span class="line">  fastcgi_buffer_size 16k;</span><br><span class="line">  fastcgi_buffers 16 16k;</span><br><span class="line">  fastcgi_busy_buffers_size 16k;</span><br><span class="line">  fastcgi_temp_file_write_size 16k;</span><br><span class="line">  fastcgi_cache <span class="keyword">TEST</span>;</span><br><span class="line">  fastcgi_cache_valid 200 302 1h;</span><br><span class="line">  fastcgi_cache_valid 301 1d;</span><br><span class="line">  fastcgi_cache_valid any 1m;</span><br><span class="line">  fastcgi_cache_min_uses 1;</span><br><span class="line">  fastcgi_cache_use_stale <span class="keyword">error</span> timeout invalid_header http_500;</span><br><span class="line"></span><br><span class="line">  open_file_cache max=204800 inactive=20s;</span><br><span class="line">  open_file_cache_min_uses 1;</span><br><span class="line">  open_file_cache_valid 30s;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  tcp_nodelay <span class="keyword">on</span>;</span><br><span class="line"></span><br><span class="line">  gzip <span class="keyword">on</span>;</span><br><span class="line">  gzip_min_length  1k;</span><br><span class="line">  gzip_buffers     4 16k;</span><br><span class="line">  gzip_http_version 1.0;</span><br><span class="line">  gzip_comp_level 2;</span><br><span class="line">  gzip_types       text/plain application/x-javascript text/css application/xml;</span><br><span class="line">  gzip_vary <span class="keyword">on</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  server</span><br><span class="line">  &#123;</span><br><span class="line">    listen       80 backlog=65533;</span><br><span class="line">    server_name  www.linuxyan.com;</span><br><span class="line">    index index.php index.htm;</span><br><span class="line">    root  /www/html/;</span><br><span class="line"></span><br><span class="line">    location /status</span><br><span class="line">    &#123;</span><br><span class="line">stub_status <span class="keyword">on</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ .*\.(php|php5)?$</span><br><span class="line">    &#123;</span><br><span class="line">fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">fastcgi_index index.php;</span><br><span class="line"><span class="keyword">include</span> fcgi.<span class="keyword">conf</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|js|css)$</span><br><span class="line">    &#123;</span><br><span class="line">      expires      30d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    log_format  access  '<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] <span class="string">"$request"</span> '</span><br><span class="line">      '<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> <span class="string">"$http_referer"</span> '</span><br><span class="line">      '<span class="string">"$http_user_agent"</span> <span class="variable">$http_x_forwarded_for</span>';</span><br><span class="line">    access_log  /www/<span class="keyword">log</span>/access.<span class="keyword">log</span>  access;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">关于FastCGI的几个指令</span><br><span class="line"></span><br><span class="line">fastcgi_cache_path /usr/<span class="keyword">local</span>/nginx/fastcgi_cache <span class="keyword">levels</span>=1:2 keys_zone=<span class="keyword">TEST</span>:10m inactive=5m;</span><br><span class="line">　　这个指令为FastCGI缓存指定一个路径，目录结构等级，关键字区域存储时间和非活动删除时间。</span><br><span class="line"></span><br><span class="line">fastcgi_connect_timeout 300;</span><br><span class="line">　　指定连接到后端FastCGI的超时时间。</span><br><span class="line"></span><br><span class="line">fastcgi_send_timeout 300;</span><br><span class="line">　　向FastCGI传送请求的超时时间，这个值是指已经完成两次握手后向FastCGI传送请求的超时时间。</span><br><span class="line"></span><br><span class="line">fastcgi_read_timeout 300;</span><br><span class="line">　　接收FastCGI应答的超时时间，这个值是指已经完成两次握手后接收FastCGI应答的超时时间。</span><br><span class="line"></span><br><span class="line">fastcgi_buffer_size 16k;</span><br><span class="line">　　指定读取FastCGI应答第一部分需要用多大的缓冲区，这里可以设置为fastcgi_buffers指令指定的缓冲区大小，上面的指令指定它将使用1个16k的缓冲区去读取应答的第一部分，即应答头，其实这个应答头一般情况下都很小（不会超过1k），但是你如果在fastcgi_buffers指令中指定了缓冲区的大小，那么它也会分配一个fastcgi_buffers指定的缓冲区大小去缓存。</span><br><span class="line"></span><br><span class="line">fastcgi_buffers 16 16k;</span><br><span class="line">　　指定本地需要用多少和多大的缓冲区来缓冲FastCGI的应答，如上所示，如果一个php脚本所产生的页面大小为256k，则会为其分配16个16k的缓冲区来缓存，如果大于256k，增大于256k的部分会缓存到fastcgi_temp指定的路径中，当然这对服务器负载来说是不明智的方案，因为内存中处理数据速度要快于硬盘，通常这个值的设置应该选择一个你的站点中的php脚本所产生的页面大小的中间值，比如你的站点大部分脚本所产生的页面大小为256k就可以把这个值设置为16 16k，或者4 64k 或者64 4k，但很显然，后两种并不是好的设置方法，因为如果产生的页面只有32k，如果用4 64k它会分配1个64k的缓冲区去缓存，而如果使用64 4k它会分配8个4k的缓冲区去缓存，而如果使用16 16k则它会分配2个16k去缓存页面，这样看起来似乎更加合理。</span><br><span class="line"></span><br><span class="line">fastcgi_busy_buffers_size 32k;</span><br><span class="line">　　这个指令我也不知道是做什么用，只知道默认值是fastcgi_buffers的两倍。</span><br><span class="line"></span><br><span class="line">fastcgi_temp_file_write_size 32k;</span><br><span class="line">　　在写入fastcgi_temp_path时将用多大的数据块，默认值是fastcgi_buffers的两倍。</span><br><span class="line"></span><br><span class="line">fastcgi_cache <span class="keyword">TEST</span></span><br><span class="line">　　开启FastCGI缓存并且为其制定一个名称。个人感觉开启缓存非常有用，可以有效降低CPU负载，并且防止502错误。但是这个缓存会引起很多问题，因为它缓存的是动态页面。具体使用还需根据自己的需求。</span><br><span class="line"></span><br><span class="line">fastcgi_cache_valid 200 302 1h;</span><br><span class="line">fastcgi_cache_valid 301 1d;</span><br><span class="line">fastcgi_cache_valid any 1m;</span><br><span class="line">　　为指定的应答代码指定缓存时间，如上例中将200，302应答缓存一小时，301应答缓存1天，其他为1分钟。</span><br><span class="line"></span><br><span class="line">fastcgi_cache_min_uses 1;</span><br><span class="line">　　缓存在fastcgi_cache_path指令inactive参数值时间内的最少使用次数，如上例，如果在5分钟内某文件1次也没有被使用，那么这个文件将被移除。</span><br><span class="line"></span><br><span class="line">fastcgi_cache_use_stale <span class="keyword">error</span> timeout invalid_header http_500;</span><br><span class="line">　　不知道这个参数的作用，猜想应该是让nginx知道哪些类型的缓存是没用的。 以上为nginx中FastCGI相关参数，另外，FastCGI自身也有一些配置需要进行优化，如果你使用php-fpm来管理FastCGI，可以修改配置文件中的以下值：</span><br><span class="line"></span><br><span class="line">60</span><br><span class="line">　　同时处理的并发请求数，即它将开启最多60个子线程来处理并发连接。</span><br><span class="line"></span><br><span class="line">102400</span><br><span class="line">　　最多打开文件数。</span><br><span class="line"></span><br><span class="line">204800</span><br><span class="line">　　每个进程在重置之前能够执行的最多请求数。</span><br></pre></td></tr></table></figure></p><h3 id="2018-12-14-14-28-10"><a href="#2018-12-14-14-28-10" class="headerlink" title="2018-12-14 14:28:10"></a>2018-12-14 14:28:10</h3><p>7.配置SSL访问(HTTPS访问)<br>在conf.d目录下创建testhttps.conf 文件，内容为<br><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line"><span class="variable">$vi</span> testhttps.conf</span><br><span class="line">    <span class="keyword">server</span> &#123;</span><br><span class="line">        listen       <span class="number">80</span>;</span><br><span class="line">        listen       <span class="number">443</span>;  <span class="comment"># 必须监听443</span></span><br><span class="line">        server_name  testhttps.daiwoniu.com;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 下面证书非必须项，不配置和配置没有认证的证书文件，浏览器会提示非安全警告</span></span><br><span class="line">        <span class="comment"># 小网站可以通过又拍云平台购买免费SSL服务，也无须配置证书文件，其原理是域名解析到又拍云平台，又拍云在转发到实际的ip地址</span></span><br><span class="line">        <span class="comment">#ssl on;</span></span><br><span class="line">        <span class="comment">#为虚拟主机指定pem格式的证书文件</span></span><br><span class="line">        <span class="comment">#ssl_certificate      /opt/test/ssl/server.crt;</span></span><br><span class="line">        <span class="comment">#为虚拟主机指定私钥文件</span></span><br><span class="line">        <span class="comment">#ssl_certificate_key  /opt/test/ssl/server.key;</span></span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_redirect off;</span><br><span class="line">            proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">            proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            proxy_pass http://<span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">8080</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">error_page</span>   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.<span class="keyword">html</span> &#123;</span><br><span class="line">            <span class="literal">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">$</span><br></pre></td></tr></table></figure></p><p>  扩展知识：自己生成证书文件<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line">$ openssl genrsa -des3 -out server<span class="selector-class">.key</span> <span class="number">1024</span></span><br><span class="line">$ openssl req -new -key server<span class="selector-class">.key</span> -out server.csr</span><br><span class="line">$ cp server<span class="selector-class">.key</span> server<span class="selector-class">.key</span><span class="selector-class">.org</span></span><br><span class="line">$ openssl rsa -<span class="keyword">in</span> server<span class="selector-class">.key</span><span class="selector-class">.org</span> -out server.key</span><br><span class="line">$ openssl x509 -req -days <span class="number">365</span> -<span class="keyword">in</span> server<span class="selector-class">.csr</span> -signkey server<span class="selector-class">.key</span> -out server.crt</span><br><span class="line">$</span><br></pre></td></tr></table></figure></p><p>  <img src="/img/nginx-suibi/1.png" alt="生成SSL证书"><br>  需要注意的是在common name中填入网站域名，同时也可以使用泛域名；</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;2016-09-05-16-14-10&quot;&gt;&lt;a href=&quot;#2016-09-05-16-14-10&quot; class=&quot;headerlink&quot; title=&quot;2016-09-05 16:14:10&quot;&gt;&lt;/a&gt;2016-09-05 16:14:10&lt;/h3&gt;&lt;h6 id=&quot;命令&quot;&gt;&lt;a href=&quot;#命令&quot; class=&quot;headerlink&quot; title=&quot;命令&quot;&gt;&lt;/a&gt;命令&lt;/h6&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$cd&lt;/span&gt; /opt/app/nginx-&lt;span class=&quot;number&quot;&gt;1.10&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;// 进入安装目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$sbin&lt;/span&gt;/nginx -t     &lt;span class=&quot;comment&quot;&gt;// 检查配置文件ngnix.conf的正确性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$sbin&lt;/span&gt;/nginx    &lt;span class=&quot;comment&quot;&gt;// 启动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$sbin&lt;/span&gt;/nginx -s reload    &lt;span class=&quot;comment&quot;&gt;// 重新载入配置文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$sbin&lt;/span&gt;/nginx -s reopen    &lt;span class=&quot;comment&quot;&gt;// 重启 Nginx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$sbin&lt;/span&gt;/nginx -s stop     &lt;span class=&quot;comment&quot;&gt;// 停止 Nginx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h6&gt;&lt;p&gt;进入安装目录 &lt;code&gt;$cd /opt/app/nginx-1.10.1&lt;/code&gt;&lt;br&gt;nginx.conf 文件是nginx的主入口配置&lt;br&gt;
    
    </summary>
    
      <category term="开发工具" scheme="http://blog.daiwoniu.com/categories/develop-tool/"/>
    
    
      <category term="随笔" scheme="http://blog.daiwoniu.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="nginx" scheme="http://blog.daiwoniu.com/tags/nginx/"/>
    
      <category term="配置" scheme="http://blog.daiwoniu.com/tags/%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>linux下安装nginx</title>
    <link href="http://blog.daiwoniu.com/posts/develop-tool/2016-09-05-linux-nginx.html"/>
    <id>http://blog.daiwoniu.com/posts/develop-tool/2016-09-05-linux-nginx.html</id>
    <published>2016-09-05T07:59:10.000Z</published>
    <updated>2016-09-05T07:59:10.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="nginx是什么？"><a href="#nginx是什么？" class="headerlink" title="nginx是什么？"></a>nginx是什么？</h4><blockquote><p>nginx就不多做解释了，如果不知道的基本也就没必要看如何安装了。</p></blockquote><h4 id="nginx安装"><a href="#nginx安装" class="headerlink" title="nginx安装"></a>nginx安装</h4><blockquote><ol><li>下载<br> PCRE 作用是让 Ngnix 支持 Rewrite 功能（<em><font color="#FFFF00">非必须</font></em>）。<br> <code>$wget http://downloads.sourceforge.net/project/pcre/pcre/8.39/pcre-8.39.tar.gz</code><br> <code>$wget http://nginx.org/download/nginx-1.10.1.tar.gz</code><a id="more"></a></li><li>安装 <figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span></span><br><span class="line"><span class="comment">// 解压 </span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$tar</span> -zxvf nginx-1.10.1.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建安装目录</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$mkdir</span> /opt/app/nginx-1.10.1</span></span><br><span class="line"><span class="comment">// 配置安装选项（如果需要--with-pcre请将目录指向下载的pcre-8.39.tar.gz解压后的文件夹目录）</span></span><br><span class="line"><span class="symbol">$</span>./configure --prefix=/opt/app/nginx<span class="number">-1.10</span><span class="number">.1</span> --with-http_stub_status_module --with-http_ssl_module --with-pcre=/opt/install/pcre<span class="number">-8.39</span></span><br><span class="line"><span class="comment">// 安装</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$make</span></span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$make</span> install</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 Nginx 运行使用的组和用户(非必须)</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$groupadd</span> www</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$useradd</span> -g www www</span></span><br><span class="line"><span class="symbol">$</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="3"><li>启动 <figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$cd</span> /opt/app/nginx-1.10.1</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$sbin</span>/nginx</span></span><br><span class="line"><span class="comment">// 直接在浏览器打开：127.0.0.1:80</span></span><br><span class="line"><span class="symbol">$</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><h4 id="nginx使用："><a href="#nginx使用：" class="headerlink" title="nginx使用："></a>nginx使用：</h4><blockquote><p>请查看 <a href="/posts/develop-tool/2016-09-05-nginx-suibi.html">nginx随笔</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;nginx是什么？&quot;&gt;&lt;a href=&quot;#nginx是什么？&quot; class=&quot;headerlink&quot; title=&quot;nginx是什么？&quot;&gt;&lt;/a&gt;nginx是什么？&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;nginx就不多做解释了，如果不知道的基本也就没必要看如何安装了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;nginx安装&quot;&gt;&lt;a href=&quot;#nginx安装&quot; class=&quot;headerlink&quot; title=&quot;nginx安装&quot;&gt;&lt;/a&gt;nginx安装&lt;/h4&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;下载&lt;br&gt; PCRE 作用是让 Ngnix 支持 Rewrite 功能（&lt;em&gt;&lt;font color=&quot;#FFFF00&quot;&gt;非必须&lt;/font&gt;&lt;/em&gt;）。&lt;br&gt; &lt;code&gt;$wget http://downloads.sourceforge.net/project/pcre/pcre/8.39/pcre-8.39.tar.gz&lt;/code&gt;&lt;br&gt; &lt;code&gt;$wget http://nginx.org/download/nginx-1.10.1.tar.gz&lt;/code&gt;
    
    </summary>
    
      <category term="开发工具" scheme="http://blog.daiwoniu.com/categories/develop-tool/"/>
    
    
      <category term="linux" scheme="http://blog.daiwoniu.com/tags/linux/"/>
    
      <category term="nginx" scheme="http://blog.daiwoniu.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>linux下安装git</title>
    <link href="http://blog.daiwoniu.com/posts/develop-tool/2016-08-24-linux-git.html"/>
    <id>http://blog.daiwoniu.com/posts/develop-tool/2016-08-24-linux-git.html</id>
    <published>2016-08-24T02:42:46.000Z</published>
    <updated>2016-08-24T02:42:46.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="git是什么？"><a href="#git是什么？" class="headerlink" title="git是什么？"></a>git是什么？</h4><blockquote><p>git就不多做解释了，如果不知道的基本也就没必要看如何安装了。</p></blockquote><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><blockquote><ol><li>下载<br> <code>$wget https://www.kernel.org/pub/software/scm/git/git-2.1.2.tar.gz</code><a id="more"></a></li><li>安装 <figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span></span><br><span class="line"><span class="comment">// 移除旧的安装</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$yum</span> remove git</span></span><br><span class="line"><span class="comment">// 安装依赖</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$yum</span> install curl-devel expat-devel gettext-devel openssl-devel zlib-devel     </span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$yum</span> install  gcc perl-ExtUtils-MakeMaker</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 解压 </span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$tar</span> -xvzf git-2.1.2.tar.gz</span></span><br><span class="line"><span class="comment">// 创建安装目录</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$mkdir</span> /opt/app/git-2.1.2</span></span><br><span class="line"><span class="comment">// 安装</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$make</span> prefix=/opt/app/git-2.1.2 all</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$make</span> prefix=/opt/app/git-2.1.2 install</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改环境变量 </span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$vi</span> /etc/profile </span></span><br><span class="line">export GIT_HOME=/opt/app/git<span class="number">-2.1</span><span class="number">.2</span>  #git安装目录</span><br><span class="line">export PATH=<span class="symbol">$</span>PATH:<span class="symbol">$</span>GIT_HOME/bin</span><br><span class="line"><span class="comment">// 保存 (按ESC后输入:wq!)  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使修改生效，.后面有空格</span></span><br><span class="line"><span class="symbol">$</span>. /etc/profile </span><br><span class="line"></span><br><span class="line"><span class="comment">// 查看git版本</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$git</span> --version</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 其它方式安装</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$yum</span> install git #此方法安装的版本比较低</span></span><br><span class="line"><span class="symbol">$</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><h4 id="git使用："><a href="#git使用：" class="headerlink" title="git使用："></a>git使用：</h4><blockquote><p>请查看 <a href="/posts/develop-tool/2016-08-17-git-suibi.html">git随笔</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;git是什么？&quot;&gt;&lt;a href=&quot;#git是什么？&quot; class=&quot;headerlink&quot; title=&quot;git是什么？&quot;&gt;&lt;/a&gt;git是什么？&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;git就不多做解释了，如果不知道的基本也就没必要看如何安装了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h4&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;下载&lt;br&gt; &lt;code&gt;$wget https://www.kernel.org/pub/software/scm/git/git-2.1.2.tar.gz&lt;/code&gt;
    
    </summary>
    
      <category term="开发工具" scheme="http://blog.daiwoniu.com/categories/develop-tool/"/>
    
    
      <category term="git" scheme="http://blog.daiwoniu.com/tags/git/"/>
    
      <category term="linux" scheme="http://blog.daiwoniu.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>linux下搭建Maven仓库私服</title>
    <link href="http://blog.daiwoniu.com/posts/develop-tool/2016-08-24-linux-nexus.html"/>
    <id>http://blog.daiwoniu.com/posts/develop-tool/2016-08-24-linux-nexus.html</id>
    <published>2016-08-24T01:51:24.000Z</published>
    <updated>2016-08-24T01:51:24.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Nexus和Maven是什么？"><a href="#Nexus和Maven是什么？" class="headerlink" title="Nexus和Maven是什么？"></a>Nexus和Maven是什么？</h4><blockquote><p>Nexus和Maven就不多做解释了，如果不知道的基本也就没必要看如何搭建了。</p></blockquote><h4 id="Nexus安装"><a href="#Nexus安装" class="headerlink" title="Nexus安装"></a>Nexus安装</h4><blockquote><ol><li>下载<br> <code>$wget http://sonatype-download.global.ssl.fastly.net/nexus/oss/nexus-2.13.0-01-bundle.tar.gz</code><a id="more"></a></li><li>安装 <figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span></span><br><span class="line"><span class="comment">// 解压 </span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$tar</span> -xvzf nexus-2.13.0-01-bundle.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将nexus-2.13.0-01和sonatype-work放到同一个目录下(如创建的nexus-2.13目录)         </span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$mkdir</span> /opt/app/nexus-2.13</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$cp</span> nexus-2.13.0-01 /opt/app/nexus-2.13/</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$cp</span> sonatype-work /opt/app/nexus-2.13/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 拷贝启动脚本 </span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$cp</span> /opt/app/nexus-2.13/nexus-2.13.0-01/bin/nexus /etc/init.d/    </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改启动脚本配置</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$vi</span> /etc/init.d/nexus </span></span><br><span class="line">NEXUS_HOME=<span class="string">"/opt/app/nexus-2.13/nexus-2.13.0-01"</span>  #Nexus安装目录</span><br><span class="line">RUN_AS_USER=nexus</span><br><span class="line">PIDDIR=<span class="string">"$&#123;NEXUS_HOME&#125;"</span></span><br><span class="line"><span class="comment">// 保存 (按ESC后输入:wq!)  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加nexus用户</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$useradd</span> nexus</span></span><br><span class="line"><span class="comment">// 设置nexus目录用户权限 </span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$chown</span> -R nexus nexus-2.13</span></span><br><span class="line"><span class="comment">// 设置nexus目录用户组权限</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$chgrp</span> -R nexus nexus-2.13</span></span><br><span class="line"><span class="symbol">$</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="3"><li>启动 <figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span></span><br><span class="line"><span class="comment">// 默认8081端口，默认用户admin/admin123</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$service</span> nexus start</span></span><br><span class="line"><span class="comment">// 查看启动状态和线程id </span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$service</span> nexus status</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 直接在浏览器打开：127.0.0.1:8081/nexus</span></span><br><span class="line"><span class="symbol">$</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="4"><li>关于相关配置<br> <code>$vi /opt/app/nexus-2.13/nexus-2.13.0-01/conf/nexus.properties</code><br> 可以修改端口、ip、工作目录等<br> <img src="/img/linux-nexus/1.png" alt="Nexus安装"><br> 本人的只是改了端口<code>application-port=3000</code></li></ol></blockquote><h4 id="Nexus使用："><a href="#Nexus使用：" class="headerlink" title="Nexus使用："></a>Nexus使用：</h4>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Nexus和Maven是什么？&quot;&gt;&lt;a href=&quot;#Nexus和Maven是什么？&quot; class=&quot;headerlink&quot; title=&quot;Nexus和Maven是什么？&quot;&gt;&lt;/a&gt;Nexus和Maven是什么？&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Nexus和Maven就不多做解释了，如果不知道的基本也就没必要看如何搭建了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Nexus安装&quot;&gt;&lt;a href=&quot;#Nexus安装&quot; class=&quot;headerlink&quot; title=&quot;Nexus安装&quot;&gt;&lt;/a&gt;Nexus安装&lt;/h4&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;下载&lt;br&gt; &lt;code&gt;$wget http://sonatype-download.global.ssl.fastly.net/nexus/oss/nexus-2.13.0-01-bundle.tar.gz&lt;/code&gt;
    
    </summary>
    
      <category term="开发工具" scheme="http://blog.daiwoniu.com/categories/develop-tool/"/>
    
    
      <category term="linux" scheme="http://blog.daiwoniu.com/tags/linux/"/>
    
      <category term="Maven" scheme="http://blog.daiwoniu.com/tags/Maven/"/>
    
      <category term="Nexus" scheme="http://blog.daiwoniu.com/tags/Nexus/"/>
    
  </entry>
  
  <entry>
    <title>Windows下搭建Maven仓库私服</title>
    <link href="http://blog.daiwoniu.com/posts/develop-tool/2016-08-19-windows-nexus.html"/>
    <id>http://blog.daiwoniu.com/posts/develop-tool/2016-08-19-windows-nexus.html</id>
    <published>2016-08-19T05:38:00.000Z</published>
    <updated>2016-08-19T05:38:00.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Nexus和Maven是什么？"><a href="#Nexus和Maven是什么？" class="headerlink" title="Nexus和Maven是什么？"></a>Nexus和Maven是什么？</h4><blockquote><p>Nexus和Maven就不多做解释了，如果不知道的基本也就没必要看如何搭建了。</p></blockquote><h4 id="Nexus安装"><a href="#Nexus安装" class="headerlink" title="Nexus安装"></a>Nexus安装</h4><blockquote><ol><li>下载<br> Nexus下载地址：sonatype-download.global.ssl.fastly.net/nexus/oss/nexus-latest-bundle.zip<a id="more"></a></li><li>安装<br> 下载后，解压，进入<code>\nexus-2.11.3-01\bin\jsw</code> 目录<br> 然后根据要安装Nexus的操作系统版本进入相应目录，我是win7旗舰版64为所以我进入 \nexus-2.11.3-01\bin\jsw\windows-x86-64  目录<br> <img src="/img/windows-nexus/1.png" alt="Nexus安装"></li><li>启动<br> 如果执行 console-nexus.bat ，那么执行完，直接在浏览器打开：127.0.0.1:8081/nexus/  出来Nexus页面就代表ok。（启动过程可能会需要一段时间，启动完不要关闭窗口）<br> 如果执行 install-nexus.bat ， 那么执行完，要再进行一步：启动服务，可以再执行 start-nexus.bat 来启动服务<br> 如果喜欢装逼可以在window服务中找到<br> <img src="/img/windows-nexus/2.png" alt="Nexus安装"><br> 来启动， 启动后参照上面在浏览器打开地址。（服务启动过程也需要一段时间，请耐心，千万不要以为死机了哦。）<br> 都说的这么直白了，那么 stop-nexus.bat 和uninstall-nexus.bat 就不唠叨了。wrapper.exe 这货是干嘛的还真不知道，也没再去网上搜，喜欢装逼的朋友可以自行搜索。</li><li>关于相关配置<br> 网上有个地址：wrapper.tanukisoftware.com/doc/english/properties.html ，但是不是中文，懒得一点一点翻译，这里就只说几个，个人觉得爱装逼人可能会去该的东西吧。<br> 声明，Nexus是用的jetty做web服务。<br> 首先端口，为啥是8081呢，对啊，这是为什么呢？<br> 来请看这个目录：<code>\nexus-2.11.3-01\conf</code><br> <img src="/img/windows-nexus/3.png" alt="Nexus安装"><br> jetty.xml 里的配置：<br> <img src="/img/windows-nexus/4.png" alt="Nexus安装"><br> 那么application-host和application-port 那来的呢？<br> 注意这个目录最后一个文件 nexus.properties，修改端口的时候，修改完，记得重启服务哦，端口不要已经被占用哦，否则会启动服务失败的，如果失败可以看下<code>\nexus-2.11.3-01\logs\wrapper.log</code>  里的错误信息。<br> <img src="/img/windows-nexus/5.png" alt="Nexus安装"><br> ok，你懂得！<br> 那么另一个装逼问题，window服务名咋来的？<br> 好，来请看这个目录：<code>\nexus-2.11.3-01\bin\jsw\conf</code>  下的 wrapper.conf  这个。由于里面配置项太多，只摘要几个显逼格的项。<br> Nexus的仓库目录：<br> <img src="/img/windows-nexus/6.png" alt="Nexus安装"><br> 也就是 和nexus-2.11.3-01同目录。<br> 安装为window服务的配置信息：<br> <img src="/img/windows-nexus/7.png" alt="Nexus安装"></li></ol></blockquote><h4 id="Nexus使用："><a href="#Nexus使用：" class="headerlink" title="Nexus使用："></a>Nexus使用：</h4>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Nexus和Maven是什么？&quot;&gt;&lt;a href=&quot;#Nexus和Maven是什么？&quot; class=&quot;headerlink&quot; title=&quot;Nexus和Maven是什么？&quot;&gt;&lt;/a&gt;Nexus和Maven是什么？&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Nexus和Maven就不多做解释了，如果不知道的基本也就没必要看如何搭建了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Nexus安装&quot;&gt;&lt;a href=&quot;#Nexus安装&quot; class=&quot;headerlink&quot; title=&quot;Nexus安装&quot;&gt;&lt;/a&gt;Nexus安装&lt;/h4&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;下载&lt;br&gt; Nexus下载地址：sonatype-download.global.ssl.fastly.net/nexus/oss/nexus-latest-bundle.zip
    
    </summary>
    
      <category term="开发工具" scheme="http://blog.daiwoniu.com/categories/develop-tool/"/>
    
    
      <category term="Maven" scheme="http://blog.daiwoniu.com/tags/Maven/"/>
    
      <category term="Nexus" scheme="http://blog.daiwoniu.com/tags/Nexus/"/>
    
      <category term="Windows" scheme="http://blog.daiwoniu.com/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>网站导航</title>
    <link href="http://blog.daiwoniu.com/posts/recreation/2016-08-19-url-daohang.html"/>
    <id>http://blog.daiwoniu.com/posts/recreation/2016-08-19-url-daohang.html</id>
    <published>2016-08-19T05:25:24.000Z</published>
    <updated>2016-08-25T04:51:00.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="电影网站："><a href="#电影网站：" class="headerlink" title="电影网站："></a>电影网站：</h4><blockquote><h5 id="电影下载"><a href="#电影下载" class="headerlink" title="电影下载"></a>电影下载</h5><pre><code>www.80s.twwww.poxiao.comwww.btbbt.ccwww.dygod.netwww.dygang.comwww.66ys.cc</code></pre><a id="more"></a><h5 id="网络电视30天回看网站"><a href="#网络电视30天回看网站" class="headerlink" title="网络电视30天回看网站"></a>网络电视30天回看网站</h5><pre><code>webftp.bbs.hnol.net/dysr/201001/CCTV_very/CNTV_20100802.htm</code></pre><h4 id="影视资讯网站"><a href="#影视资讯网站" class="headerlink" title="影视资讯网站"></a>影视资讯网站</h4><pre><code>movie.douban.comwww.mtime.comwww.imdb.commovies.yahoo.co.jpeiga.commovie.walkerplus.com</code></pre></blockquote><h4 id="音乐网站"><a href="#音乐网站" class="headerlink" title="音乐网站"></a>音乐网站</h4><blockquote><h5 id="原创音乐网站"><a href="#原创音乐网站" class="headerlink" title="原创音乐网站"></a>原创音乐网站</h5><pre><code>www.5sing.kugou.com</code></pre></blockquote><h4 id="软件网站"><a href="#软件网站" class="headerlink" title="软件网站"></a>软件网站</h4><blockquote><h5 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h5><pre><code>www.xiazaiba.commsdn.itellyou.cn</code></pre></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;电影网站：&quot;&gt;&lt;a href=&quot;#电影网站：&quot; class=&quot;headerlink&quot; title=&quot;电影网站：&quot;&gt;&lt;/a&gt;电影网站：&lt;/h4&gt;&lt;blockquote&gt;
&lt;h5 id=&quot;电影下载&quot;&gt;&lt;a href=&quot;#电影下载&quot; class=&quot;headerlink&quot; title=&quot;电影下载&quot;&gt;&lt;/a&gt;电影下载&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;www.80s.tw
www.poxiao.com
www.btbbt.cc
www.dygod.net
www.dygang.com
www.66ys.cc
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="娱乐" scheme="http://blog.daiwoniu.com/categories/recreation/"/>
    
    
      <category term="娱乐" scheme="http://blog.daiwoniu.com/tags/%E5%A8%B1%E4%B9%90/"/>
    
      <category term="网址" scheme="http://blog.daiwoniu.com/tags/%E7%BD%91%E5%9D%80/"/>
    
      <category term="电影" scheme="http://blog.daiwoniu.com/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="音乐" scheme="http://blog.daiwoniu.com/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>git随笔</title>
    <link href="http://blog.daiwoniu.com/posts/develop-tool/2016-08-17-git-suibi.html"/>
    <id>http://blog.daiwoniu.com/posts/develop-tool/2016-08-17-git-suibi.html</id>
    <published>2016-08-17T10:36:57.000Z</published>
    <updated>2016-08-17T10:36:57.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2016-08-17-18-36-57"><a href="#2016-08-17-18-36-57" class="headerlink" title="2016-08-17 18:36:57"></a>2016-08-17 18:36:57</h3><h6 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h6><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line"><span class="variable">$mkdir</span> testproject</span><br><span class="line"><span class="variable">$cd</span> testproject</span><br><span class="line"><span class="variable">$git</span> init</span><br><span class="line"><span class="variable">$touch</span> README</span><br><span class="line"><span class="variable">$git</span> add README</span><br><span class="line"><span class="variable">$git</span> commit -m <span class="string">'first commit'</span></span><br><span class="line"><span class="variable">$git</span> remote add origin git@git<span class="selector-class">.tdcredit</span><span class="selector-class">.com</span>:develop/testproject<span class="selector-class">.git</span>   <span class="comment">//指定本地库与github上的哪个项目相连                  </span></span><br><span class="line"><span class="variable">$git</span> push -u origin master   <span class="comment">//将本地库提交到github上。 </span></span><br><span class="line">$</span><br></pre></td></tr></table></figure><h6 id="设置用户信息："><a href="#设置用户信息：" class="headerlink" title="设置用户信息："></a>设置用户信息：</h6><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line"><span class="variable">$git</span> config --global user<span class="selector-class">.name</span> <span class="string">"defnngj"</span>   <span class="comment">//给自己起个用户名</span></span><br><span class="line"><span class="variable">$git</span> config --global user<span class="selector-class">.email</span>  <span class="string">"xxx@xxx.com"</span>   <span class="comment">//填写自己的邮箱              </span></span><br><span class="line">$</span><br></pre></td></tr></table></figure><p>修改git远程地址： 在项目根目录下.git目录下的config文件<br><a id="more"></a></p><h6 id="基础命令："><a href="#基础命令：" class="headerlink" title="基础命令："></a>基础命令：</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line"><span class="variable">$git</span> init    //初始化目录</span><br><span class="line"><span class="variable">$git</span> <span class="built_in">clone</span> http://.....     //克隆仓库到本地</span><br><span class="line"><span class="variable">$git</span> branch    //查看本地分支</span><br><span class="line"><span class="variable">$git</span> branch -a     //查看本地和远程分支</span><br><span class="line"><span class="variable">$git</span> checkout 分支名    //（origin/的后面开始写） 切换分支</span><br><span class="line"><span class="variable">$git</span> pull      //获取最新代码</span><br><span class="line"><span class="variable">$git</span> status     //查看变更的文件</span><br><span class="line"><span class="variable">$git</span> config --global push.default <span class="string">"current"</span>        //Git设置当前分支为默认push分支                          </span><br><span class="line"><span class="variable">$git</span> config --global http.postBuffer 524288000      //修改默认上传上限</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加文件</span></span><br><span class="line"><span class="variable">$git</span> add .     //添加全部修改文件</span><br><span class="line"><span class="variable">$git</span> add <span class="built_in">test</span>/      //添加指定文件夹下所有修改文件</span><br><span class="line"><span class="variable">$git</span> add <span class="built_in">test</span>/test.java <span class="built_in">test</span>/test2.java      //添加指定修改文件</span><br><span class="line"><span class="variable">$git</span> add -i      //查看已添加但没有加入版本库的文件（unchanged代表已修改未添加add）</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除文件</span></span><br><span class="line"><span class="variable">$git</span> rm -r --cached target/</span><br><span class="line"><span class="variable">$git</span> rm a.java       //删除文件</span><br><span class="line"><span class="variable">$git</span> rm --cached <span class="built_in">test</span>/test.java     //删除添加add的文件</span><br><span class="line"></span><br><span class="line"><span class="comment">#提交</span></span><br><span class="line"><span class="variable">$git</span> commit -m <span class="string">'提交信息'</span>     //提交到版本库</span><br><span class="line"><span class="variable">$git</span> push      //将提交到版本库内容上传到服务器 如果不是当前分支，后面跟分支名</span><br><span class="line"></span><br><span class="line"><span class="comment">#撤销回滚</span></span><br><span class="line"><span class="variable">$git</span> reset --hard HEAD     //回滚到add之前的状态</span><br><span class="line"><span class="variable">$git</span> reset --hard     //回复到未修改前</span><br><span class="line"><span class="variable">$git</span> show     //查看最新一次的改动</span><br><span class="line"><span class="variable">$git</span> remote show origin       //查看本地分支和远程分支的对应</span><br><span class="line"><span class="variable">$git</span> remote prune origin      //如果远程分支已经删除，根据远程分支更新本地分支</span><br><span class="line"><span class="variable">$git</span> merge tmp      //合并tmp分支到当前分支</span><br><span class="line"><span class="variable">$git</span> push origin :tmp       //删除远程分支</span><br><span class="line"><span class="variable">$git</span> branch -m v0.2.0/master develop      //重命名本地分支</span><br><span class="line"><span class="variable">$git</span> push origin develop     //本地当前分支推送到远程</span><br><span class="line"><span class="variable">$git</span> push --delete origin v0.1.0/month_bill      //删除远程分支 v0.1.0/month_bill</span><br><span class="line">$</span><br></pre></td></tr></table></figure><p>如果本地有变更，获取远端和本地合并<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line"><span class="variable">$git</span> fetch origin</span><br><span class="line"><span class="variable">$git</span> merge origin/develop      </span><br><span class="line">$</span><br></pre></td></tr></table></figure></p><p>如果希望保留生产服务器上所做的改动,仅仅并入新配置项, 处理方法如下:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line"><span class="variable">$git</span> stash</span><br><span class="line"><span class="variable">$git</span> pull</span><br><span class="line"><span class="variable">$git</span> stash pop</span><br><span class="line">//然后可以使用git diff -w +文件名 来确认代码自动合并的情况.</span><br><span class="line">//反过来,如果希望用代码库中的文件完全覆盖本地工作版本. 方法如下:                              </span><br><span class="line"><span class="variable">$git</span> reset --hard</span><br><span class="line"><span class="variable">$git</span> pull</span><br><span class="line">$</span><br></pre></td></tr></table></figure></p><p>设置ssh提交。  <code>ssh -T git@github.com</code>  测试ssh连接是否成功<br><code>ssh-keygen -t rsa -C “xx@xxx.com”</code>     改成你的邮箱地址<br>按3个回车，密码为空。把id_rsa.pub里面的内容添加ssh key到git上面。<br><br><br><br></p><h6 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h6><p>efrror: RPC failed; result=22, HTTP code = 413  或 he remote end hung up unexpectedly  错误<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line"><span class="variable">$git</span> config http.postBuffer 524288000          </span><br><span class="line"><span class="variable">$git</span> config core.autocrlf <span class="literal">true</span></span><br><span class="line">$</span><br></pre></td></tr></table></figure></p><p><br><br>错误提示：fatal: remote origin already exists.<br><code>git remote rm origin</code></p><p><br><br>错误提示：error: failed to push som refs to ……..<br><code>git pull origin master</code> //先pull 下来 再push 上去</p><p><br><br>错误提示：old mode 100755 new mode 100644<br>让git忽略掉文件权限检查：<code>git config --add core.filemode false</code></p><p><br><br>window系统错误提示：<br>E:\storm-sql&gt;git pull origin joeywen<br>  0 [main] us 0init_cheap: VirtualAlloc pointer is null, Win32 error 487<br>AllocationBase 0x0, BaseAddress 0x68570000, RegionSize 0x2F0000, State 0x10000C:\Program Files (x86)\Git\bin\sh.exe: *** Couldn‘t reserve space for cygwin‘s heap, Win32     error 0<br>原因分析:<br>Cygwin uses persistent shared memory sections, which can on occasion become corrupted. The symptom of this is that some Cygwin programs beginto fail, but other applications are unaffected. Since these sharedmemory sections are persistent, often a reboot is needed toclear them outbefore the problem can be resolved.<br>解决办法:<br>找到Git的安装目录，在命令行下切到bin目录，使用如下命令<br><code>rebase.exe-b 0x50000000msys-1.0.dll</code><br>然后git重新恢复了正常，在使用该命令确保git此时没有在使用</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;2016-08-17-18-36-57&quot;&gt;&lt;a href=&quot;#2016-08-17-18-36-57&quot; class=&quot;headerlink&quot; title=&quot;2016-08-17 18:36:57&quot;&gt;&lt;/a&gt;2016-08-17 18:36:57&lt;/h3&gt;&lt;h6 id=&quot;初始化项目&quot;&gt;&lt;a href=&quot;#初始化项目&quot; class=&quot;headerlink&quot; title=&quot;初始化项目&quot;&gt;&lt;/a&gt;初始化项目&lt;/h6&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$mkdir&lt;/span&gt; testproject&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$cd&lt;/span&gt; testproject&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$git&lt;/span&gt; init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$touch&lt;/span&gt; README&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$git&lt;/span&gt; add README&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$git&lt;/span&gt; commit -m &lt;span class=&quot;string&quot;&gt;&#39;first commit&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$git&lt;/span&gt; remote add origin git@git&lt;span class=&quot;selector-class&quot;&gt;.tdcredit&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.com&lt;/span&gt;:develop/testproject&lt;span class=&quot;selector-class&quot;&gt;.git&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;//指定本地库与github上的哪个项目相连                  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$git&lt;/span&gt; push -u origin master   &lt;span class=&quot;comment&quot;&gt;//将本地库提交到github上。 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&quot;设置用户信息：&quot;&gt;&lt;a href=&quot;#设置用户信息：&quot; class=&quot;headerlink&quot; title=&quot;设置用户信息：&quot;&gt;&lt;/a&gt;设置用户信息：&lt;/h6&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$git&lt;/span&gt; config --global user&lt;span class=&quot;selector-class&quot;&gt;.name&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;defnngj&quot;&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;//给自己起个用户名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$git&lt;/span&gt; config --global user&lt;span class=&quot;selector-class&quot;&gt;.email&lt;/span&gt;  &lt;span class=&quot;string&quot;&gt;&quot;xxx@xxx.com&quot;&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;//填写自己的邮箱              &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改git远程地址： 在项目根目录下.git目录下的config文件&lt;br&gt;
    
    </summary>
    
      <category term="开发工具" scheme="http://blog.daiwoniu.com/categories/develop-tool/"/>
    
    
      <category term="git" scheme="http://blog.daiwoniu.com/tags/git/"/>
    
      <category term="命令" scheme="http://blog.daiwoniu.com/tags/%E5%91%BD%E4%BB%A4/"/>
    
      <category term="随笔" scheme="http://blog.daiwoniu.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>java随笔</title>
    <link href="http://blog.daiwoniu.com/posts/java/2016-08-17-java-suibi.html"/>
    <id>http://blog.daiwoniu.com/posts/java/2016-08-17-java-suibi.html</id>
    <published>2016-08-17T10:21:23.000Z</published>
    <updated>2016-08-17T10:21:23.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2016-08-17-18-21-23"><a href="#2016-08-17-18-21-23" class="headerlink" title="2016-08-17 18:21:23"></a>2016-08-17 18:21:23</h3><p><code>listObj.subList(int fromIndex, int toIndex);</code><br>对子list做的任何改动都会反映在原listObj上。<br>相反，在原listObj上做的非结构性改动也会反映在子list上。所谓的结构性改动就是指改变list大小。</p><h6 id="常用方法："><a href="#常用方法：" class="headerlink" title="常用方法："></a>常用方法：</h6><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 格式化数字</span></span><br><span class="line"><span class="comment"> * @param number</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">String</span> formatNumbers(<span class="built_in">Object</span> <span class="built_in">number</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(isBlankEmpty(<span class="built_in">number</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    DecimalFormat format = (DecimalFormat) NumberFormat.getPercentInstance();                      </span><br><span class="line">    format.applyPattern(<span class="string">"####,###,###,###,##0.00"</span>);</span><br><span class="line">    <span class="built_in">String</span> retStr = <span class="built_in">number</span>.toString();</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        retStr = format.format(Double.parseDouble(<span class="built_in">number</span>.toString()));</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"-0.00"</span>.equalsIgnoreCase(retStr))&#123;</span><br><span class="line">            retStr = <span class="string">"0.00"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;&#125;</span><br><span class="line">    <span class="keyword">return</span> retStr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用Velocity进行字符串占位符替换</span></span><br><span class="line"><span class="comment"> * @param content 带占位符的字符串（占位符关键字$&#123;&#125; 如：哈哈哈$&#123;a&#125;,jfdkjfd$&#123;b&#125;）</span></span><br><span class="line"><span class="comment"> * @param contextParams 值</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">String</span> replaceStr(<span class="built_in">String</span> content, Map&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; contextParams)&#123;</span><br><span class="line">    <span class="keyword">if</span>(isBlankEmpty(content) || contextParams == <span class="literal">null</span> || contextParams.isEmpty())&#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line">    VelocityContext context = <span class="keyword">new</span> VelocityContext(contextParams);</span><br><span class="line">    StringWriter writer = <span class="keyword">new</span> StringWriter();</span><br><span class="line">    Velocity.evaluate(context, writer, <span class="string">""</span>, content);</span><br><span class="line">    <span class="keyword">return</span> writer.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成随机字符串</span></span><br><span class="line"><span class="comment"> * @param base 随机的字符范围，默认是英文小写和数字</span></span><br><span class="line"><span class="comment"> * @param length 字符串长度</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> getRandomString(<span class="keyword">String</span> base, <span class="built_in">int</span> length) &#123; <span class="comment">//length表示生成字符串的长度                          </span></span><br><span class="line">    <span class="keyword">if</span>(isBlankEmpty(base))&#123;</span><br><span class="line">        base = <span class="string">"abcdefghijklmnopqrstuvwxyz0123456789"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Random <span class="built_in">random</span> = <span class="keyword">new</span> Random();</span><br><span class="line">    StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">        <span class="built_in">int</span> number = <span class="built_in">random</span>.nextInt(base.length());</span><br><span class="line">        sb.<span class="built_in">append</span>(base.charAt(number));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 全角转半角:</span></span><br><span class="line"><span class="comment"> * @param fullStr</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> full2Half(<span class="keyword">String</span> fullStr) &#123;</span><br><span class="line">    <span class="keyword">if</span>(isBlankEmpty(fullStr))&#123;</span><br><span class="line">        <span class="keyword">return</span> fullStr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">char</span>[] c = fullStr.toCharArray();</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; c.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (c[i] &gt;= <span class="number">65281</span> &amp;&amp; c[i] &lt;= <span class="number">65374</span>) &#123;</span><br><span class="line">            c[i] = (<span class="built_in">char</span>) (c[i] - <span class="number">65248</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c[i] == <span class="number">12288</span>) &#123; <span class="comment">// 空格</span></span><br><span class="line">            c[i] = (<span class="built_in">char</span>) <span class="number">32</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">String</span>(c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 半角转全角</span></span><br><span class="line"><span class="comment"> * @param halfStr</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> half2Full(<span class="keyword">String</span> halfStr) &#123;</span><br><span class="line">    <span class="keyword">if</span>(isBlankEmpty(halfStr))&#123;</span><br><span class="line">        <span class="keyword">return</span> halfStr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">char</span>[] c = halfStr.toCharArray();</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; c.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (c[i] == <span class="number">32</span>) &#123;</span><br><span class="line">            c[i] = (<span class="built_in">char</span>) <span class="number">12288</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c[i] &lt; <span class="number">127</span>) &#123;</span><br><span class="line">            c[i] = (<span class="built_in">char</span>) (c[i] + <span class="number">65248</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">String</span>(c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否手机号码</span></span><br><span class="line"><span class="comment"> * @param str</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">boolean</span> isMobile(<span class="keyword">String</span> <span class="built_in">str</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(isBlankEmpty(<span class="built_in">str</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!isBlankEmpty(<span class="built_in">str</span>))&#123;</span><br><span class="line">            <span class="built_in">str</span> = <span class="built_in">str</span>.replaceAll(<span class="string">" "</span>,<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Matcher ma;</span><br><span class="line">        Pattern pa = Pattern.compile(<span class="string">"^(((13[0-9]&#123;1&#125;)|(15[0-9]&#123;1&#125;)|(18[0-9]&#123;1&#125;)|(17[0-9]&#123;1&#125;)|(14[0-9]&#123;1&#125;))+\\d&#123;8&#125;)$"</span>);                     </span><br><span class="line">        ma = pa.matcher(<span class="built_in">str</span>);</span><br><span class="line">        <span class="built_in">boolean</span> tmp = ma.matches();</span><br><span class="line">        <span class="keyword">if</span>(tmp &amp;&amp; <span class="built_in">str</span>.length() == <span class="number">11</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否邮箱</span></span><br><span class="line"><span class="comment"> * @param str</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">boolean</span> isEmail(<span class="keyword">String</span> <span class="built_in">str</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(isBlankEmpty(<span class="built_in">str</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        Matcher ma;</span><br><span class="line">        Pattern pa = Pattern.compile(<span class="string">"^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+$"</span>);</span><br><span class="line">        ma = pa.matcher(<span class="built_in">str</span>);</span><br><span class="line">        <span class="keyword">return</span> ma.matches();</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否含中文</span></span><br><span class="line"><span class="comment"> * @param str</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">boolean</span> isChineseChar(<span class="keyword">String</span> <span class="built_in">str</span>)&#123;</span><br><span class="line">    <span class="built_in">boolean</span> temp = <span class="keyword">false</span>;</span><br><span class="line">    Pattern p=Pattern.compile(<span class="string">"[\u4e00-\u9fa5]"</span>);</span><br><span class="line">    Matcher m=p.matcher(<span class="built_in">str</span>);</span><br><span class="line">    <span class="keyword">if</span>(m.find())&#123;</span><br><span class="line">        temp =  <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;2016-08-17-18-21-23&quot;&gt;&lt;a href=&quot;#2016-08-17-18-21-23&quot; class=&quot;headerlink&quot; title=&quot;2016-08-17 18:21:23&quot;&gt;&lt;/a&gt;2016-08-17 18:21:23&lt;/h3&gt;&lt;p&gt;&lt;code&gt;listObj.subList(int fromIndex, int toIndex);&lt;/code&gt;&lt;br&gt;对子list做的任何改动都会反映在原listObj上。&lt;br&gt;相反，在原listObj上做的非结构性改动也会反映在子list上。所谓的结构性改动就是指改变list大小。&lt;/p&gt;
&lt;h6 id=&quot;常用方法：&quot;&gt;&lt;a href=&quot;#常用方法：&quot; class=&quot;headerlink&quot; title=&quot;常用方法：&quot;&gt;&lt;/a&gt;常用方法：&lt;/h6&gt;&lt;figure class=&quot;highlight typescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 格式化数字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @param number&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; formatNumbers(&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;number&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(isBlankEmpty(&lt;span class=&quot;built_in&quot;&gt;number&lt;/span&gt;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DecimalFormat format = (DecimalFormat) NumberFormat.getPercentInstance();                      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    format.applyPattern(&lt;span class=&quot;string&quot;&gt;&quot;####,###,###,###,##0.00&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; retStr = &lt;span class=&quot;built_in&quot;&gt;number&lt;/span&gt;.toString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        retStr = format.format(Double.parseDouble(&lt;span class=&quot;built_in&quot;&gt;number&lt;/span&gt;.toString()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;-0.00&quot;&lt;/span&gt;.equalsIgnoreCase(retStr))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retStr = &lt;span class=&quot;string&quot;&gt;&quot;0.00&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e)&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; retStr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 使用Velocity进行字符串占位符替换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @param content 带占位符的字符串（占位符关键字$&amp;#123;&amp;#125; 如：哈哈哈$&amp;#123;a&amp;#125;,jfdkjfd$&amp;#123;b&amp;#125;）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @param contextParams 值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * @return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; replaceStr(&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; content, Map&amp;lt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;&amp;gt; contextParams)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(isBlankEmpty(content) || contextParams == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; || contextParams.isEmpty())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; content;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    VelocityContext context = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; VelocityContext(contextParams);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    StringWriter writer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringWriter();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Velocity.evaluate(context, writer, &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, content);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; writer.toString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="java" scheme="http://blog.daiwoniu.com/categories/java/"/>
    
    
      <category term="随笔" scheme="http://blog.daiwoniu.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="jave" scheme="http://blog.daiwoniu.com/tags/jave/"/>
    
      <category term="工具类" scheme="http://blog.daiwoniu.com/tags/%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://blog.daiwoniu.com/posts/test/2016-08-16-test.html"/>
    <id>http://blog.daiwoniu.com/posts/test/2016-08-16-test.html</id>
    <published>2016-08-16T09:28:04.000Z</published>
    <updated>2016-08-17T08:28:04.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="测试" scheme="http://blog.daiwoniu.com/categories/test/"/>
    
    
      <category term="测试" scheme="http://blog.daiwoniu.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blog.daiwoniu.com/posts/help/2016-08-16-hello-world.html"/>
    <id>http://blog.daiwoniu.com/posts/help/2016-08-16-hello-world.html</id>
    <published>2016-08-16T05:28:04.000Z</published>
    <updated>2016-08-17T08:28:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a><br><a id="more"></a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="帮助手册" scheme="http://blog.daiwoniu.com/categories/help/"/>
    
    
      <category term="手册" scheme="http://blog.daiwoniu.com/tags/%E6%89%8B%E5%86%8C/"/>
    
      <category term="帮助" scheme="http://blog.daiwoniu.com/tags/%E5%B8%AE%E5%8A%A9/"/>
    
  </entry>
  
</feed>
